<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_OrchestratorFolderFullPath="AhmedShawkey/RayaHolding/EmployeeOnboard/Dispatcher" this:Main.in_OrchestratorAssetsRelativeEndPoint="/odata/Assets/UiPath.Server.Configuration.OData.GetFiltered" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:e="clr-namespace:EmployeeOnboard_Dispatcher;assembly=DataService.EmployeeOnboard_Dispatcher" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:p10="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p2="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p4="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p7="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p8="http://schemas.uipath.com/workflow/activities/intelligentocr/training" xmlns:p9="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:this="clr-namespace:" xmlns:uda="clr-namespace:UiPath.DataService.Activities;assembly=UiPath.DataService.Activities.Core" xmlns:udam="clr-namespace:UiPath.DataService.Activities.Models;assembly=UiPath.DataService.Activities.Core" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OrchestratorFolderFullPath" Type="InArgument(x:String)" />
    <x:Property Name="in_OrchestratorAssetsRelativeEndPoint" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>722.4,1520.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Actions</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.Persistence.Activities.Tasks</x:String>
      <x:String>UiPath.Persistence.Activities.Model.Task</x:String>
      <x:String>UiPath.Persistence.Activities</x:String>
      <x:String>UiPath.DU.Shared.Utils</x:String>
      <x:String>EmployeeOnboard_Dispatcher</x:String>
      <x:String>UiPath.DataService.Definition</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataService.Activities</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models.FilterBuilder</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Activities</x:String>
      <x:String>UiPath.Platform.Activities</x:String>
      <x:String>RPAHUB.BeautyMailRender</x:String>
      <x:String>RPAHUB.BeautyMailRender.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.IntelligentOCR.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.FileOperations</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.DataService.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataValidation</x:String>
      <x:String>UiPath.IntelligentOCR.Actions.Abstractions</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.Persistence.Activities.FormTask</x:String>
      <x:String>UiPath.Persistence.Activities.BaseTask</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.SmartData.PositionBasedExtraction.Storage</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>DataService.EmployeeOnboard_Dispatcher</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>RPAHUB.BeautyMailRender</AssemblyReference>
      <AssemblyReference>RPAHUB.BeautyMailRender.Activities</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.ReaderWriter</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Activities.Core</AssemblyReference>
      <AssemblyReference>UiPath.DataService.Definition</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Activities.Runtime</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.Unsafe</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.SmartData.PositionBasedExtraction</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Description:&#xA;&#xA;Notes:&#xA;- This is unattended bot triggered by &quot;Integration Serivce - Outlook incomming mail with specific subject&quot;&#xA;- This unattended bot forced to read only 1 mail (newest mail).&#xA;- The persistance support is enabled because the Human-In-Loop via Action center for DU validation.&#xA;&#xA;Breif Steps:&#xA;1. Read Configurations From Assets.&#xA;2. Read Incoming mails via outlook.&#xA;3. Validate mail required data are valid if invalid then send notification mail.&#xA;4. As long as pt(3) is valid then apply doc understanding foreach documents and extract data.&#xA;5. The extracted data will be disptached to Queue as well as the docs will be zipped and stored in uipath &quot;Storage Buckets&quot;&#xA;6. If all required fields are valid then send confirmation mail, else then notification mail.&#xA;&#xA;" DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="732.8,1456" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:Boolean, x:String, sd:DataTable))" Name="DicOfDUStatus" />
      <Variable x:TypeArguments="snm:MailMessage" Name="MailMessage" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="General Handler" sap:VirtualizedContainerService.HintSize="670.4,1076" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
        <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText=" new Dictionary&lt;string,object&gt;()&#xA;{&#xA; {&quot;Reference&quot;,Reference} ,&#xA; {&quot;FolderOfAttachments&quot;,attachmentTempFolder+@&quot;\&quot;+Reference} ,&#xA; {&quot;DicOfExcelInfo&quot;,DictionaryOfExcelData},&#xA; {&quot;To&quot;,MailMessage.Sender.Address},&#xA; {&quot;DisplayName&quot;,MailMessage.Sender.DisplayName},&#xA; {&quot;Cc&quot;,string.Join(&quot;;&quot;,MailMessage.CC.Select(x=&gt;x.Address))},&#xA; {&quot;Bcc&quot;,string.Join(&quot;;&quot;,MailMessage.Bcc.Select(x=&gt;x.Address))}&#xA;}" Name="DicOfRequestInfo" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Flowchart DisplayName="Sub-Processes" sap:VirtualizedContainerService.HintSize="633.6,821.6" sap2010:WorkflowViewState.IdRef="Flowchart_1">
          <Flowchart.Variables>
            <Variable x:TypeArguments="x:String" Name="Reference" />
          </Flowchart.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
              <av:Size x:Key="ShapeSize">60,75.2</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 100,107.5 100,119.5</av:PointCollection>
              <x:Double x:Key="Height">784.7675375805306</x:Double>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID3</x:Reference>
          </Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">0,119.5</av:Point>
                <av:Size x:Key="ShapeSize">200,175.2</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">200,207.1 230,207.1 230,158.2 380,158.2</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="1. Read Configurations From Assets.&#xA;&#xA;- Exception Types: SE&#xA;" DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="200,175.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:Exception" Name="SE" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="&quot;Invoke, initialization WF started&quot;" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">"Invoke, initialization WF started"</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Invoke initializtion processing of reading configuration from orchestrator assets" DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="387.2,112.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Processes\\Configuration\\ReadAssetsToConfig.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_OrchestratorFolderFullPath">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">in_OrchestratorFolderFullPath</CSharpValue>
                  </InArgument>
                  <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_Config">
                    <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">Config</CSharpReference>
                  </InOutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_OrchestratorAssetsRelativeEndPoint">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">in_OrchestratorAssetsRelativeEndPoint</CSharpValue>
                  </InArgument>
                  <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                    <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">SE</CSharpReference>
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <If sap2010:Annotation.AnnotationText="If SE Occured then throw SE and terminate whole process." DisplayName="If - SE" sap:VirtualizedContainerService.HintSize="387.2,96.8" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">SE!=null</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <TerminateWorkflow DisplayName="Terminate Workflow - SE" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_8">
                      <TerminateWorkflow.Exception>
                        <InArgument x:TypeArguments="s:Exception">
                          <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">SE</CSharpValue>
                        </InArgument>
                      </TerminateWorkflow.Exception>
                      <TerminateWorkflow.Reason>
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">SE.Message</CSharpValue>
                        </InArgument>
                      </TerminateWorkflow.Reason>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </TerminateWorkflow>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4" />
                </If.Else>
              </If>
              <ui:LogMessage DisplayName="&quot;Invokation of initialization WF, terminated successfully&quot;" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">"Invokation of initialization WF, terminated successfully"</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">380,101</av:Point>
                    <av:Size x:Key="ShapeSize">200,114.4</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">480,215.4 480,358.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Get folder path and validate files" sap:VirtualizedContainerService.HintSize="200,114.4" sap2010:WorkflowViewState.IdRef="Sequence_49">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="s:Exception" Name="SE" />
                    <Variable x:TypeArguments="ui:BusinessRuleException" Name="BE" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="&quot;Invoke mail manipulation WF, Started&quot;" sap:VirtualizedContainerService.HintSize="387.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_39">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_738">"Get folder and file validation WF, Started"</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ValidateAndExtract - Invoke Workflow File (Processes\\Mail\\ValidationExtraction\\ValidateAndExtract.xaml)" sap:VirtualizedContainerService.HintSize="387.2,174.4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Processes\\Mail\\ValidationExtraction\\ValidateAndExtract.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_739">Config</CSharpValue>
                      </InArgument>
                      <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                        <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_279">SE</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_DictOfRequestInfo">
                        <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_280">DicOfRequestInfo</CSharpReference>
                      </OutArgument>
                      <OutArgument x:TypeArguments="ui:BusinessRuleException" x:Key="out_BE">
                        <CSharpReference x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpReference`1_281">BE</CSharpReference>
                      </OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <If DisplayName="If - SE | BE" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="If_16">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_387">SE!=null || BE!=null</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_50">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Throw DisplayName="Throw  SE|BE" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="Throw_5">
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_388">SE!=null ? SE:BE</CSharpValue>
                          </InArgument>
                        </Throw>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_51" />
                    </If.Else>
                  </If>
                  <ui:LogMessage DisplayName="&quot;Invoke mail manipulation WF, Terminated successfully&quot;" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_40">
                    <ui:LogMessage.Message>
                      <InArgument x:TypeArguments="x:Object">
                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_386">"Invoke mail manipulation WF, Terminated successfully"</CSharpValue>
                      </InArgument>
                    </ui:LogMessage.Message>
                  </ui:LogMessage>
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID0">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">380,358.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,351.2</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">380,534.1 350,534.1 350,521.1 270,521.1</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap2010:Annotation.AnnotationText="-This sequense is used to read current DicOfRequestinfo&#xA;&#xA;Notes:&#xA;- this process use parallel foreach to eliminate the freez of the humen in loop in case if the current document need human validaion in Action Center&#xA;- this process use persistance (action center in case of confidance is not met) &#xA;- Presistance activities (wait and resume) should be placed in main.xaml file" DisplayName="DUProcessing" sap:VirtualizedContainerService.HintSize="707.2,4688.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="FolderOfAttachments" />
                        <Variable x:TypeArguments="scg:List(x:String)" Name="ListOfTargetDocument" />
                        <Variable x:TypeArguments="p1:DocumentTaxonomy" Name="Taxonomy" />
                        <Variable x:TypeArguments="x:Double" Name="DUClassificationConfidance" />
                        <Variable x:TypeArguments="x:Double" Name="DUExtractionConfidance" />
                        <Variable x:TypeArguments="x:String" Name="LocalStorageClassificationFolder" />
                        <Variable x:TypeArguments="x:String" Name="LocalStorageExtractionFolder" />
                        <Variable x:TypeArguments="x:String" Name="DUFormExtractorEndPoint" />
                        <Variable x:TypeArguments="x:String" Name="DUApiKey" />
                        <Variable x:TypeArguments="e:EgyptianNationalIDs" Name="egyptianNationalIDs" />
                        <Variable x:TypeArguments="e:CriminalRecord" Name="criminalRecord" />
                        <Variable x:TypeArguments="e:WorkStub" Name="workStub" />
                        <Variable x:TypeArguments="e:ApprovalReqeust" Name="approvalRequest" />
                        <Variable x:TypeArguments="e:Contract" Name="contract" />
                        <Variable x:TypeArguments="e:OtherOnboardData" Name="otherOnboardData" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch sap2010:Annotation.AnnotationText="Initialization actions&#xA;&#xA;-Assign useful variable form in dicofmailinfo&#xA;- Load Taxonomy" DisplayName="Try Catch - Init Actions" sap:VirtualizedContainerService.HintSize="644.8,413.6" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence DisplayName="Actions" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CommentOut sap2010:Annotation.AnnotationText="Unit Test" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="478.4,84" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,194" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - Test" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_1">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                        <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_123">DicOfRequestInfo</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">
                                        <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26" xml:space="preserve">new Dictionary&lt;string,object&gt;
{
{"Reference","5af1a5ae-074a-4767-b6d6-440bdc973ae2"} ,
 {"MailObject",null} ,
 {"FolderOfAttachments",@"D:\RPA\RayaHolding\Sensitive-Data\AttachmentTempFolder\5af1a5ae-074a-4767-b6d6-440bdc973ae2"} ,
 {"DicOfExcelInfo",null} 
}</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <ui:MultipleAssign sap2010:Annotation.AnnotationText="assing useful variable in DicOfRequestInfo" DisplayName="Multiple Assign - Vars" sap:VirtualizedContainerService.HintSize="478.4,366.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">FolderOfAttachments</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">DicOfRequestInfo["FolderOfAttachments"].ToString()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="scg:List(x:String)">
                                        <CSharpReference x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">ListOfTargetDocument</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="scg:List(x:String)">
                                        <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_747" xml:space="preserve">new DirectoryInfo(FolderOfAttachments).GetFiles()
.Select(file =&gt; file.FullName).ToList();</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">DUClassificationConfidance</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_109">float.Parse(Config["DUClassificationConfidance"].ToString())</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:Double">
                                        <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">DUExtractionConfidance</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:Double">
                                        <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">float.Parse(Config["DUExtractionConfidance"].ToString())</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">LocalStorageClassificationFolder</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">@"Data\Outputs\DocumentUnderstanding\ClassificationDocuments"</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">LocalStorageExtractionFolder</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">@"Data\Outputs\DocumentUnderstanding\\ExtractionDocuments"</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_58">DUFormExtractorEndPoint</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198">Config["DUFormExtractorEndPoint"].ToString()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="x:String">
                                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_60">DUApiKey</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199">Config["DUApiKey"].ToString()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <ui:Comment sap:VirtualizedContainerService.HintSize="478.4,75.2" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// For any new Document we should init it in next multi-assign" />
                            <ui:MultipleAssign sap2010:Annotation.AnnotationText="Note: for egyptian national ID only ine entity is used two hold both informations for front/back ends" DisplayName="Multiple Assign - Init Data Service" sap:VirtualizedContainerService.HintSize="478.4,316.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
                              <ui:MultipleAssign.AssignOperations>
                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_45">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="e:EgyptianNationalIDs">
                                        <CSharpReference x:TypeArguments="e:EgyptianNationalIDs" sap2010:WorkflowViewState.IdRef="CSharpReference`1_177">egyptianNationalIDs</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="e:EgyptianNationalIDs">
                                        <CSharpValue x:TypeArguments="e:EgyptianNationalIDs" sap2010:WorkflowViewState.IdRef="CSharpValue`1_463">new EgyptianNationalIDs()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_46">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="e:CriminalRecord">
                                        <CSharpReference x:TypeArguments="e:CriminalRecord" sap2010:WorkflowViewState.IdRef="CSharpReference`1_179">criminalRecord</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="e:CriminalRecord">
                                        <CSharpValue x:TypeArguments="e:CriminalRecord" sap2010:WorkflowViewState.IdRef="CSharpValue`1_464">new CriminalRecord()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_47">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="e:OtherOnboardData">
                                        <CSharpReference x:TypeArguments="e:OtherOnboardData" sap2010:WorkflowViewState.IdRef="CSharpReference`1_247">otherOnboardData</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="e:OtherOnboardData">
                                        <CSharpValue x:TypeArguments="e:OtherOnboardData" sap2010:WorkflowViewState.IdRef="CSharpValue`1_548">new OtherOnboardData()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_51">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="e:WorkStub">
                                        <CSharpReference x:TypeArguments="e:WorkStub" sap2010:WorkflowViewState.IdRef="CSharpReference`1_203">workStub</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="e:WorkStub">
                                        <CSharpValue x:TypeArguments="e:WorkStub" sap2010:WorkflowViewState.IdRef="CSharpValue`1_561">new WorkStub()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_60">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="e:ApprovalReqeust">
                                        <CSharpReference x:TypeArguments="e:ApprovalReqeust" sap2010:WorkflowViewState.IdRef="CSharpReference`1_225">approvalRequest</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="e:ApprovalReqeust">
                                        <CSharpValue x:TypeArguments="e:ApprovalReqeust" sap2010:WorkflowViewState.IdRef="CSharpValue`1_623">new ApprovalReqeust()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_73">
                                    <ui:AssignOperation.To>
                                      <OutArgument x:TypeArguments="e:Contract">
                                        <CSharpReference x:TypeArguments="e:Contract" sap2010:WorkflowViewState.IdRef="CSharpReference`1_248">contract</CSharpReference>
                                      </OutArgument>
                                    </ui:AssignOperation.To>
                                    <ui:AssignOperation.Value>
                                      <InArgument x:TypeArguments="e:Contract">
                                        <CSharpValue x:TypeArguments="e:Contract" sap2010:WorkflowViewState.IdRef="CSharpValue`1_656">new Contract()</CSharpValue>
                                      </InArgument>
                                    </ui:AssignOperation.Value>
                                  </ui:AssignOperation>
                                </scg:List>
                              </ui:MultipleAssign.AssignOperations>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MultipleAssign>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="478.4,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,192" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Add Excel Info to DS" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="&quot;Add Excel Info to DS&quot;" sap:VirtualizedContainerService.HintSize="479,141" sap2010:WorkflowViewState.IdRef="LogMessage_47">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_546">"Add excel info to datas ervice"</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                    <ui:MultipleAssign DisplayName="Multiple Assign - Excel Info " sap:VirtualizedContainerService.HintSize="479,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                                      <ui:MultipleAssign.AssignOperations>
                                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_48">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_199">otherOnboardData.InsuranceNumber</CSharpReference>
                                              </OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_559" xml:space="preserve">//(DicOfRequestInfo["DicOfExcelInfo"].GetType().GetProperties().ToDictionary(prop =&gt; prop.Name, prop =&gt; prop.GetValue(DicOfRequestInfo["DicOfExcelInfo"], null)))["Insurance Number"].ToString()
JsonConvert.DeserializeObject&lt;Dictionary&lt;string, object&gt;&gt;(JsonConvert.SerializeObject(DicOfRequestInfo["DicOfExcelInfo"]))["Insurance Number"].ToString()</CSharpValue>
                                              </InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_49">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_200">otherOnboardData.PhoneNumber</CSharpReference>
                                              </OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_560" xml:space="preserve">//(DicOfRequestInfo["DicOfExcelInfo"].GetType().GetProperties().ToDictionary(prop =&gt; prop.Name, prop =&gt; prop.GetValue(DicOfRequestInfo["DicOfExcelInfo"], null)))["Phone Number"].ToString()
JsonConvert.DeserializeObject&lt;Dictionary&lt;string, object&gt;&gt;(JsonConvert.SerializeObject(DicOfRequestInfo["DicOfExcelInfo"]))["Phone Number"].ToString()</CSharpValue>
                                              </InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_50">
                                            <ui:AssignOperation.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_202">otherOnboardData.Reference</CSharpReference>
                                              </OutArgument>
                                            </ui:AssignOperation.To>
                                            <ui:AssignOperation.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_589">Reference</CSharpValue>
                                              </InArgument>
                                            </ui:AssignOperation.Value>
                                          </ui:AssignOperation>
                                        </scg:List>
                                      </ui:MultipleAssign.AssignOperations>
                                    </ui:MultipleAssign>
                                    <uda:CreateEntityRecord x:TypeArguments="e:OtherOnboardData" OutputEntity="{x:Null}" VisibleDynamicPropertiesInfo="{x:Null}" ContinueOnError="False" DisplayName="Create Entity Record - Other Data" EntityId="3e801d76-f45a-ef11-991a-000d3ab703d4" ExpansionDepth="2" sap:VirtualizedContainerService.HintSize="479,142" sap2010:WorkflowViewState.IdRef="CreateEntityRecord`1_7" IsInRecordView="True" TimeoutInMs="30000">
                                      <uda:CreateEntityRecord.InputEntity>
                                        <InArgument x:TypeArguments="e:OtherOnboardData">
                                          <CSharpValue x:TypeArguments="e:OtherOnboardData" sap2010:WorkflowViewState.IdRef="CSharpValue`1_552">otherOnboardData</CSharpValue>
                                        </InArgument>
                                      </uda:CreateEntityRecord.InputEntity>
                                      <uda:CreateEntityRecord.InputEntityInFieldView>
                                        <InArgument x:TypeArguments="e:OtherOnboardData">
                                          <CSharpValue x:TypeArguments="e:OtherOnboardData" sap2010:WorkflowViewState.IdRef="CSharpValue`1_553">new EmployeeOnboard_Dispatcher.OtherOnboardData()</CSharpValue>
                                        </InArgument>
                                      </uda:CreateEntityRecord.InputEntityInFieldView>
                                      <uda:CreateEntityRecord.State>
                                        <udam:RecordState IsInRecordView="True" RequiredFieldCount="3">
                                          <udam:RecordState.SelectedFields>
                                            <scg:List x:TypeArguments="udam:DynamicEntityField" Capacity="3">
                                              <udam:DynamicEntityField Id="63aedec2-f45a-ef11-991a-000d3ab703d4" IsRequired="True" Name="InsuranceNumber">
                                                <udam:DynamicEntityField.ArgumentValue>
                                                  <InArgument x:TypeArguments="x:String" />
                                                </udam:DynamicEntityField.ArgumentValue>
                                              </udam:DynamicEntityField>
                                              <udam:DynamicEntityField Id="1c75c3ce-f45a-ef11-991a-000d3ab703d4" IsRequired="True" Name="PhoneNumber">
                                                <udam:DynamicEntityField.ArgumentValue>
                                                  <InArgument x:TypeArguments="x:String" />
                                                </udam:DynamicEntityField.ArgumentValue>
                                              </udam:DynamicEntityField>
                                              <udam:DynamicEntityField Id="c014de65-f65a-ef11-991a-000d3ab703d4" IsRequired="True" Name="Reference">
                                                <udam:DynamicEntityField.ArgumentValue>
                                                  <InArgument x:TypeArguments="x:String" />
                                                </udam:DynamicEntityField.ArgumentValue>
                                              </udam:DynamicEntityField>
                                            </scg:List>
                                          </udam:RecordState.SelectedFields>
                                        </udam:RecordState>
                                      </uda:CreateEntityRecord.State>
                                    </uda:CreateEntityRecord>
                                    <ui:LogMessage DisplayName="&quot;Add excel info to data service, done successfully&quot;" sap:VirtualizedContainerService.HintSize="479,141" sap2010:WorkflowViewState.IdRef="LogMessage_46">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_547">"Add excel info to data service, done successfully"</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                  </Sequence>
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Assign sap2010:Annotation.AnnotationText="Hint stop if any of DU/document is failed (should be handled in Main)&#xA;&#xA;// example success case: DocumentTypeId : &lt;true, all data extracted successfully, dt of success data&gt;&#xA;//example failed case: DocumentTypeId : &lt;false, SE|BE msge, null&gt;" DisplayName="Assign - DicOfDUStatus" sap:VirtualizedContainerService.HintSize="478.4,175.2" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:Boolean, x:String, sd:DataTable))">
                                  <CSharpReference x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:Boolean, x:String, sd:DataTable))" sap2010:WorkflowViewState.IdRef="CSharpReference`1_184">DicOfDUStatus</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:Boolean, x:String, sd:DataTable))">
                                  <CSharpValue x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:Boolean, x:String, sd:DataTable))" sap2010:WorkflowViewState.IdRef="CSharpValue`1_748" xml:space="preserve">// example: DocumentTypeId : &lt;true, all data extracted successfully, dt of success data&gt;
//example: DocumentTypeId : &lt;false, SE msge, null&gt;
new Dictionary&lt;string,Tuple&lt;bool,string,DataTable&gt;&gt;()</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                            <ui:LogMessage DisplayName="&quot;Apply DU processing over [&quot;+listOfDocument.Count.ToString()+&quot;] documents.&quot;" sap:VirtualizedContainerService.HintSize="478.4,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info">
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">"Apply DU processing over ["+ListOfTargetDocument.Count.ToString()+"] documents."</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <Sequence DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="478.4,83.2" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="&quot;Load Taxonomy&quot;" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">"Load Taxonomy"</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                              <p:LoadTaxonomy DisplayName="Taxonomy " sap:VirtualizedContainerService.HintSize="387.2,105.6" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1">
                                <p:LoadTaxonomy.Taxonomy>
                                  <OutArgument x:TypeArguments="p1:DocumentTaxonomy">
                                    <CSharpReference x:TypeArguments="p1:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">Taxonomy</CSharpReference>
                                  </OutArgument>
                                </p:LoadTaxonomy.Taxonomy>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </p:LoadTaxonomy>
                              <ui:LogMessage DisplayName="&quot;Taxonomy loaded successfully&quot;" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info">
                                <ui:LogMessage.Message>
                                  <InArgument x:TypeArguments="x:Object">
                                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">"Taxonomy loaded successfully"</CSharpValue>
                                  </InArgument>
                                </ui:LogMessage.Message>
                              </ui:LogMessage>
                            </Sequence>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="452.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </Catch>
                          <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="452.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                              </ActivityAction.Argument>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <ParallelForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Iterate over each document separetly" DisplayName="Parallel For Each - DocumentPath" sap:VirtualizedContainerService.HintSize="644.8,3999.2" sap2010:WorkflowViewState.IdRef="ParallelForEach`1_1">
                        <ParallelForEach.Values>
                          <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                            <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">ListOfTargetDocument</CSharpValue>
                          </InArgument>
                        </ParallelForEach.Values>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="currentDocumentPath" />
                          </ActivityAction.Argument>
                          <TryCatch sap2010:Annotation.AnnotationText="Apply DU processsing on each document separetly&#xA;&#xA;Only SE is can be occurred" DisplayName="Try Catch - DU Processing" sap:VirtualizedContainerService.HintSize="595.2,3818.4" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                            <TryCatch.Variables>
                              <Variable x:TypeArguments="p2:Document" Name="DOM" />
                              <Variable x:TypeArguments="p3:ClassificationResult[]" Name="ClassificationResults" />
                            </TryCatch.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence sap2010:Annotation.AnnotationText="- Digitize&#xA;- Classification&#xA;- Extraction&#xA;- Export" DisplayName="DU Actions" sap:VirtualizedContainerService.HintSize="558.4,3527.2" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="DocumentText" />
                                  <Variable x:TypeArguments="x:String" Name="currentDocumentFileName" />
                                  <Variable x:TypeArguments="p3:ClassificationResult[]" Name="ValidatedClassificationResults" />
                                  <Variable x:TypeArguments="p3:ExtractionResult" Name="ValidatedExtractionResults" />
                                  <Variable x:TypeArguments="p3:ExtractionResult" Name="ExtractionResults" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MultipleAssign sap2010:Annotation.AnnotationText="Initialize local vars per iteration" DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="496,148.8" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">currentDocumentFileName</CSharpReference>
                                          </OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">new FileInfo(currentDocumentPath).Name</CSharpValue>
                                          </InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:MultipleAssign>
                                <ui:LogMessage DisplayName="&quot;Start DU processing on doucment: &quot;+ new FileInfo(currentDocumentPath).Name" sap:VirtualizedContainerService.HintSize="496,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_11">
                                  <ui:LogMessage.Message>
                                    <InArgument x:TypeArguments="x:Object">
                                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">"Start DU processing on doucment: "+ currentDocumentFileName</CSharpValue>
                                    </InArgument>
                                  </ui:LogMessage.Message>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:LogMessage>
                                <Sequence sap2010:Annotation.AnnotationText="UiPath digitizes documents by converting them into machine-readable formats." DisplayName="Digitize" sap:VirtualizedContainerService.HintSize="496,1028" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="&quot;Start digitizing processing&quot;" sap:VirtualizedContainerService.HintSize="387.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_12">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">"Start digitizing processing"</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <ui:RetryScope sap2010:Annotation.AnnotationText="Retry to digitize using DFLT retry parameters" DisplayName="Retry to Digitize" sap:VirtualizedContainerService.HintSize="387.2,551.2" sap2010:WorkflowViewState.IdRef="RetryScope_1">
                                    <ui:RetryScope.ActivityBody>
                                      <ActivityAction>
                                        <p:DigitizeDocument sap2010:Annotation.AnnotationText="UiPath digitizes documents by converting them into machine-readable formats." ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="333.6,344" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                                          <p:DigitizeDocument.DocumentObjectModel>
                                            <OutArgument x:TypeArguments="p2:Document">
                                              <CSharpReference x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">DOM</CSharpReference>
                                            </OutArgument>
                                          </p:DigitizeDocument.DocumentObjectModel>
                                          <p:DigitizeDocument.DocumentPath>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">currentDocumentPath</CSharpValue>
                                            </InArgument>
                                          </p:DigitizeDocument.DocumentPath>
                                          <p:DigitizeDocument.DocumentText>
                                            <OutArgument x:TypeArguments="x:String">
                                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">DocumentText</CSharpReference>
                                            </OutArgument>
                                          </p:DigitizeDocument.DocumentText>
                                          <p:DigitizeDocument.OCREngine>
                                            <ActivityFunc x:TypeArguments="sd1:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
                                              <ActivityFunc.Argument1>
                                                <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                              </ActivityFunc.Argument1>
                                              <ActivityFunc.Argument2>
                                                <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                              </ActivityFunc.Argument2>
                                              <p4:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="STGIjh4inLs6cqTZOseDB/hKZCXO/mRxVplbna3k7BSfCyKn6HEzkSsNwUghy28RBLFrVBDz0moJTrUsREgOhA==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,24.8" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_2" Language="auto" NoopExecution="False" Profile="None" Scale="1" Timeout="100000">
                                                <p4:UiPathDocumentOCR.Image>
                                                  <InArgument x:TypeArguments="sd1:Image">
                                                    <CSharpValue x:TypeArguments="sd1:Image" sap2010:WorkflowViewState.IdRef="CSharpValue`1_757">Image</CSharpValue>
                                                  </InArgument>
                                                </p4:UiPathDocumentOCR.Image>
                                                <p4:UiPathDocumentOCR.PredictionId>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_758">PredictionId</CSharpValue>
                                                  </InArgument>
                                                </p4:UiPathDocumentOCR.PredictionId>
                                              </p4:UiPathDocumentOCR>
                                            </ActivityFunc>
                                          </p:DigitizeDocument.OCREngine>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </p:DigitizeDocument>
                                      </ActivityAction>
                                    </ui:RetryScope.ActivityBody>
                                    <ui:RetryScope.Condition>
                                      <ActivityFunc x:TypeArguments="x:Boolean" />
                                    </ui:RetryScope.Condition>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:RetryScope>
                                  <ui:LogMessage DisplayName="&quot;Digitizing processing done successfully&quot;" sap:VirtualizedContainerService.HintSize="387.2,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_13">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">"Digitizing processing done successfully"</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                </Sequence>
                                <Sequence sap2010:Annotation.AnnotationText="Allows you to classify documents using classification models" DisplayName="Classification" sap:VirtualizedContainerService.HintSize="496,1154.4" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="&quot;Start classification processing&quot;" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">"Start classification processing"</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <ui:RetryScope sap2010:Annotation.AnnotationText="Retry to classification using DFLT retry parameters" DisplayName="Retry to Classification" sap:VirtualizedContainerService.HintSize="433.6,368" sap2010:WorkflowViewState.IdRef="RetryScope_2">
                                    <ui:RetryScope.ActivityBody>
                                      <ActivityAction>
                                        <p5:ClassifyDocumentScope sap2010:Annotation.AnnotationText="Provides a scope for classifier activities, providing all of the necessary files needed to perform document classification." DisplayName="Classify Document Scope" sap:VirtualizedContainerService.HintSize="200,160.8" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIb4fdb2a574924c9a80874a14c3a4475f&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CBE.NoCategory.E-mailDistributionList&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;CBE.NoCategory.ChangingPlaceRequest&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}},&quot;UI1b6c97c2176149248c0fcde3732937d8&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CBE.NoCategory.E-mailDistributionList&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:false}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI1b6c97c2176149248c0fcde3732937d8&quot;:&quot;0&quot;,&quot;UIb4fdb2a574924c9a80874a14c3a4475f&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{}}">
                                          <p5:ClassifyDocumentScope.ClassificationResults>
                                            <OutArgument x:TypeArguments="p3:ClassificationResult[]">
                                              <CSharpReference x:TypeArguments="p3:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">ClassificationResults</CSharpReference>
                                            </OutArgument>
                                          </p5:ClassifyDocumentScope.ClassificationResults>
                                          <p5:ClassifyDocumentScope.Classifiers>
                                            <p5:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="233.6,115.2" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_2" LearningFilePath="DocumentProcessing\\KeywordClassifier.json" PersistenceId="UIb4fdb2a574924c9a80874a14c3a4475f">
                                              <p5:KeywordBasedClassifier.ClassifierResult>
                                                <OutArgument x:TypeArguments="p6:ClassifierResult">
                                                  <DelegateArgumentReference x:TypeArguments="p6:ClassifierResult">
                                                    <DelegateOutArgument x:TypeArguments="p6:ClassifierResult" Name="ClassifierResult" />
                                                  </DelegateArgumentReference>
                                                </OutArgument>
                                              </p5:KeywordBasedClassifier.ClassifierResult>
                                              <p5:KeywordBasedClassifier.DocumentObjectModel>
                                                <InArgument x:TypeArguments="p2:Document">
                                                  <DelegateArgumentValue x:TypeArguments="p2:Document">
                                                    <DelegateInArgument x:TypeArguments="p2:Document" Name="DocumentObjectModel" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p5:KeywordBasedClassifier.DocumentObjectModel>
                                              <p5:KeywordBasedClassifier.DocumentPath>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p5:KeywordBasedClassifier.DocumentPath>
                                              <p5:KeywordBasedClassifier.DocumentText>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p5:KeywordBasedClassifier.DocumentText>
                                              <p5:KeywordBasedClassifier.DocumentTypes>
                                                <InArgument x:TypeArguments="p6:ClassifierDocumentType[]">
                                                  <DelegateArgumentValue x:TypeArguments="p6:ClassifierDocumentType[]">
                                                    <DelegateInArgument x:TypeArguments="p6:ClassifierDocumentType[]" Name="DocumentTypes" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p5:KeywordBasedClassifier.DocumentTypes>
                                              <p5:KeywordBasedClassifier.PredictionId>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p5:KeywordBasedClassifier.PredictionId>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </p5:KeywordBasedClassifier>
                                            <p7:GenerativeClassifier AvailableAssetPaths="{x:Null}" RuntimeAssetPath="{x:Null}" RuntimeTenantUrl="{x:Null}" DisplayName="Generative Classifier" sap:VirtualizedContainerService.HintSize="233.6,115.2" sap2010:WorkflowViewState.IdRef="GenerativeClassifier_1" PersistenceId="UI1b6c97c2176149248c0fcde3732937d8" Prompt="[{&quot;id&quot;:&quot;CBE.NoCategory.E-mailDistributionList&quot;,&quot;name&quot;:&quot;E-mail Distribution List&quot;,&quot;prompt&quot;:null},{&quot;id&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest&quot;,&quot;name&quot;:&quot;Changing Place Request&quot;,&quot;prompt&quot;:null}]" RetryOnFailure="True" Timeout="3600000">
                                              <p7:GenerativeClassifier.ClassifierResult>
                                                <OutArgument x:TypeArguments="p6:ClassifierResult">
                                                  <DelegateArgumentReference x:TypeArguments="p6:ClassifierResult">
                                                    <DelegateOutArgument x:TypeArguments="p6:ClassifierResult" Name="ClassifierResult" />
                                                  </DelegateArgumentReference>
                                                </OutArgument>
                                              </p7:GenerativeClassifier.ClassifierResult>
                                              <p7:GenerativeClassifier.DocumentObjectModel>
                                                <InArgument x:TypeArguments="p2:Document">
                                                  <DelegateArgumentValue x:TypeArguments="p2:Document">
                                                    <DelegateInArgument x:TypeArguments="p2:Document" Name="DocumentObjectModel" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p7:GenerativeClassifier.DocumentObjectModel>
                                              <p7:GenerativeClassifier.DocumentPath>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p7:GenerativeClassifier.DocumentPath>
                                              <p7:GenerativeClassifier.DocumentText>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p7:GenerativeClassifier.DocumentText>
                                              <p7:GenerativeClassifier.DocumentTypes>
                                                <InArgument x:TypeArguments="p6:ClassifierDocumentType[]">
                                                  <DelegateArgumentValue x:TypeArguments="p6:ClassifierDocumentType[]">
                                                    <DelegateInArgument x:TypeArguments="p6:ClassifierDocumentType[]" Name="DocumentTypes" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p7:GenerativeClassifier.DocumentTypes>
                                              <p7:GenerativeClassifier.PredictionId>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p7:GenerativeClassifier.PredictionId>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </p7:GenerativeClassifier>
                                          </p5:ClassifyDocumentScope.Classifiers>
                                          <p5:ClassifyDocumentScope.DocumentObjectModel>
                                            <InArgument x:TypeArguments="p2:Document">
                                              <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">DOM</CSharpValue>
                                            </InArgument>
                                          </p5:ClassifyDocumentScope.DocumentObjectModel>
                                          <p5:ClassifyDocumentScope.DocumentPath>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">currentDocumentPath</CSharpValue>
                                            </InArgument>
                                          </p5:ClassifyDocumentScope.DocumentPath>
                                          <p5:ClassifyDocumentScope.DocumentText>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">DocumentText</CSharpValue>
                                            </InArgument>
                                          </p5:ClassifyDocumentScope.DocumentText>
                                          <p5:ClassifyDocumentScope.Taxonomy>
                                            <InArgument x:TypeArguments="p1:DocumentTaxonomy">
                                              <CSharpValue x:TypeArguments="p1:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">Taxonomy</CSharpValue>
                                            </InArgument>
                                          </p5:ClassifyDocumentScope.Taxonomy>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </p5:ClassifyDocumentScope>
                                      </ActivityAction>
                                    </ui:RetryScope.ActivityBody>
                                    <ui:RetryScope.Condition>
                                      <ActivityFunc x:TypeArguments="x:Boolean" />
                                    </ui:RetryScope.Condition>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:RetryScope>
                                  <If sap2010:Annotation.AnnotationText="ClassificationResults[0].Confidence &lt;= DUClassificationConfidance" DisplayName="If - Classification Confidance" sap:VirtualizedContainerService.HintSize="433.6,387.2" sap2010:WorkflowViewState.IdRef="If_6">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_722" xml:space="preserve">ClassificationResults== null ||  ClassificationResults.Count() &lt;= 0 ||
ClassificationResults[0].Confidence &lt; DUClassificationConfidance</CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="p:DocumentClassificationActionData" Name="ActionObject" />
                                          <Variable x:TypeArguments="x:String" Name="HTML" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="&quot;Document classified successfully as [&quot;+ClassificationResults[0].DocumentId+&quot;]&quot;" sap:VirtualizedContainerService.HintSize="477.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Warn">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195" xml:space="preserve">(ClassificationResults == null || ClassificationResults.Count() == 0 ) ? "Document classification failed!":
"Document classification for target confidance failed!,  which is equal ["+ClassificationResults[0].Confidence+"] &lt; target confidance ["+DUClassificationConfidance+"] , document type :   ["+ClassificationResults[0].DocumentId+"]"</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                        <ui:LogMessage DisplayName="&quot;Present document on action center and wait . . .&quot;" sap:VirtualizedContainerService.HintSize="477.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">"Present document ["+currentDocumentFileName+"] on action center and wait . . ."</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                        <p5:PresentClassificationStation DisplayName="Present Classification Station" sap:VirtualizedContainerService.HintSize="477.6,372" sap2010:WorkflowViewState.IdRef="PresentClassificationStation_1">
                                          <p5:PresentClassificationStation.AutomaticClassificationResults>
                                            <InArgument x:TypeArguments="p3:ClassificationResult[]">
                                              <CSharpValue x:TypeArguments="p3:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_728">ClassificationResults</CSharpValue>
                                            </InArgument>
                                          </p5:PresentClassificationStation.AutomaticClassificationResults>
                                          <p5:PresentClassificationStation.DocumentObjectModel>
                                            <InArgument x:TypeArguments="p2:Document">
                                              <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_729">DOM</CSharpValue>
                                            </InArgument>
                                          </p5:PresentClassificationStation.DocumentObjectModel>
                                          <p5:PresentClassificationStation.DocumentPath>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_731">currentDocumentPath</CSharpValue>
                                            </InArgument>
                                          </p5:PresentClassificationStation.DocumentPath>
                                          <p5:PresentClassificationStation.DocumentText>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_730">DocumentText</CSharpValue>
                                            </InArgument>
                                          </p5:PresentClassificationStation.DocumentText>
                                          <p5:PresentClassificationStation.Taxonomy>
                                            <InArgument x:TypeArguments="p1:DocumentTaxonomy">
                                              <CSharpValue x:TypeArguments="p1:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_732">Taxonomy</CSharpValue>
                                            </InArgument>
                                          </p5:PresentClassificationStation.Taxonomy>
                                          <p5:PresentClassificationStation.ValidatedClassificationResults>
                                            <OutArgument x:TypeArguments="p3:ClassificationResult[]">
                                              <CSharpReference x:TypeArguments="p3:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_277">ValidatedClassificationResults</CSharpReference>
                                            </OutArgument>
                                          </p5:PresentClassificationStation.ValidatedClassificationResults>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </p5:PresentClassificationStation>
                                        <If sap2010:Annotation.AnnotationText="If - Invalid classifier among existance docs,  then throw SE" DisplayName="If - Invalid classifier among existance docs" sap:VirtualizedContainerService.HintSize="477.6,307.2" sap2010:WorkflowViewState.IdRef="If_13">
                                          <If.Condition>
                                            <InArgument x:TypeArguments="x:Boolean">
                                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_749" xml:space="preserve">ValidatedClassificationResults == null ||
ValidatedClassificationResults.Count() == 0 ||
string.IsNullOrEmpty(ValidatedClassificationResults.Select(x=&gt;x.DocumentTypeId).FirstOrDefault())</CSharpValue>
                                            </InArgument>
                                          </If.Condition>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Throw DisplayName="Throw - SE" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_4">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <InArgument x:TypeArguments="s:Exception">
                                                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_725" xml:space="preserve">new Exception(Config["MessageTemplateSystemException"].ToString()
	.Replace("TOKEN1","apply classification on the documents/files"))</CSharpValue>
                                                </InArgument>
                                              </Throw>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                        <ui:LogMessage DisplayName="&quot;Retrain the classification models&quot;" sap:VirtualizedContainerService.HintSize="477.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_17">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">"Resume and Retrain the model, the doucment classified by human as: " + ValidatedClassificationResults[0].DocumentTypeId</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                        <p8:TrainClassifiersScope HumanValidatedData="{x:Null}" sap2010:Annotation.AnnotationText="Retrain the models" DisplayName="Retrain classification" sap:VirtualizedContainerService.HintSize="477.6,401.6" sap2010:WorkflowViewState.IdRef="TrainClassifiersScope_1" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIce958155b8ef4d86b1ac26a0c0a8f330&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CBE.NoCategory.E-mailDistributionList&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;CBE.NoCategory.ChangingPlaceRequest&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UIce958155b8ef4d86b1ac26a0c0a8f330&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UIce958155b8ef4d86b1ac26a0c0a8f330&quot;:[]}}">
                                          <p8:TrainClassifiersScope.DocumentObjectModel>
                                            <InArgument x:TypeArguments="p2:Document">
                                              <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">DOM</CSharpValue>
                                            </InArgument>
                                          </p8:TrainClassifiersScope.DocumentObjectModel>
                                          <p8:TrainClassifiersScope.DocumentPath>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">currentDocumentPath</CSharpValue>
                                            </InArgument>
                                          </p8:TrainClassifiersScope.DocumentPath>
                                          <p8:TrainClassifiersScope.DocumentText>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">DocumentText</CSharpValue>
                                            </InArgument>
                                          </p8:TrainClassifiersScope.DocumentText>
                                          <p8:TrainClassifiersScope.HumanValidatedClassificationData>
                                            <InArgument x:TypeArguments="p3:ClassificationResult[]">
                                              <CSharpValue x:TypeArguments="p3:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">ValidatedClassificationResults</CSharpValue>
                                            </InArgument>
                                          </p8:TrainClassifiersScope.HumanValidatedClassificationData>
                                          <p8:TrainClassifiersScope.Taxonomy>
                                            <InArgument x:TypeArguments="p1:DocumentTaxonomy">
                                              <CSharpValue x:TypeArguments="p1:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">Taxonomy</CSharpValue>
                                            </InArgument>
                                          </p8:TrainClassifiersScope.Taxonomy>
                                          <p8:TrainClassifiersScope.Trainables>
                                            <p8:KeywordBasedClassifierTrainer LearningData="{x:Null}" PredictionId="{x:Null}" DisplayName="Keyword Classifier Trainer" sap:VirtualizedContainerService.HintSize="233.6,115.2" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifierTrainer_1" LearningFilePath="DocumentProcessing\\KeywordClassifier.json" PersistenceId="UIce958155b8ef4d86b1ac26a0c0a8f330">
                                              <p8:KeywordBasedClassifierTrainer.DocumentObjectModel>
                                                <InArgument x:TypeArguments="p2:Document">
                                                  <DelegateArgumentValue x:TypeArguments="p2:Document">
                                                    <DelegateInArgument x:TypeArguments="p2:Document" Name="DocumentObjectModel" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p8:KeywordBasedClassifierTrainer.DocumentObjectModel>
                                              <p8:KeywordBasedClassifierTrainer.DocumentPath>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p8:KeywordBasedClassifierTrainer.DocumentPath>
                                              <p8:KeywordBasedClassifierTrainer.DocumentText>
                                                <InArgument x:TypeArguments="x:String">
                                                  <DelegateArgumentValue x:TypeArguments="x:String">
                                                    <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p8:KeywordBasedClassifierTrainer.DocumentText>
                                              <p8:KeywordBasedClassifierTrainer.HumanValidatedData>
                                                <InArgument x:TypeArguments="p3:ExtractionResult[]">
                                                  <DelegateArgumentValue x:TypeArguments="p3:ExtractionResult[]">
                                                    <DelegateInArgument x:TypeArguments="p3:ExtractionResult[]" Name="HumanValidatedData" />
                                                  </DelegateArgumentValue>
                                                </InArgument>
                                              </p8:KeywordBasedClassifierTrainer.HumanValidatedData>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </p8:KeywordBasedClassifierTrainer>
                                          </p8:TrainClassifiersScope.Trainables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </p8:TrainClassifiersScope>
                                        <ui:LogMessage DisplayName="&quot;Retrain the classification models&quot;" sap:VirtualizedContainerService.HintSize="477.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_18">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">"Classification model retrained successfully, and the human validate the doucment type to be ["+ValidatedClassificationResults[0].DocumentTypeId+"]"</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="&quot;Document classified successfully as [&quot;+ClassificationResults[0].DocumentId+&quot;]&quot;" sap:VirtualizedContainerService.HintSize="334.4,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_19">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">"Document classified successfully as ["+ClassificationResults[0].DocumentId+"]"</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <Assign DisplayName="Assign - Classification Document" sap:VirtualizedContainerService.HintSize="433.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_2">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="p3:ClassificationResult[]">
                                        <CSharpReference x:TypeArguments="p3:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_189">ClassificationResults</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="p3:ClassificationResult[]">
                                        <CSharpValue x:TypeArguments="p3:ClassificationResult[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_726" xml:space="preserve">ValidatedClassificationResults == null  || ValidatedClassificationResults.Count() == 0?
	ClassificationResults : ValidatedClassificationResults</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </Sequence>
                                <Sequence sap2010:Annotation.AnnotationText="Extract taxonomy specified fields from the classified document" DisplayName="Extraction" sap:VirtualizedContainerService.HintSize="496,640.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="&quot;Extract taxonomy specified fields from the classified document [&quot;+ClassificationResults[0].DocumentTypeId+&quot;]&quot;" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_20">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">"Extract taxonomy specified fields from the classified document ["+ClassificationResults[0].DocumentTypeId+"]"</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <p9:DataExtractionScope AvailableAssetPaths="{x:Null}" DocumentTypeId="{x:Null}" RuntimeAssetPath="{x:Null}" RuntimeTenantUrl="{x:Null}" sap2010:Annotation.AnnotationText="Extract information from Documents using several extraction methods" ApplyGenerativeValidation="False" DisplayName="Data Extraction" FormatValuesIfPossible="True" GenerativeValidationConfidenceThreshold="99" sap:VirtualizedContainerService.HintSize="433.6,128.8" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIb6d9c283f1d24ff09bf645ba8ba199b5&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList&quot;:{&quot;FieldMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList.RequestBy&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.RequestBy&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.E-mailDistributionList.Title&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Title&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.E-mailDistributionList.Department&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Department&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.E-mailDistributionList.Division&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Division&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.E-mailDistributionList.SeatNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.SeatNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.E-mailDistributionList.Location&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Location&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.E-mailDistributionList.MobileNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.MobileNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.E-mailDistributionList.TelephoneExtension&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.TelephoneExtension&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.E-mailDistributionList.ListCreation&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.ListCreation&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null},&quot;CBE.NoCategory.ChangingPlaceRequest&quot;:{&quot;FieldMappings&quot;:{&quot;CBE.NoCategory.ChangingPlaceRequest.Name&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Name&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.ChangingPlaceRequest.Title&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Title&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.ChangingPlaceRequest.Sector&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Sector&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.ChangingPlaceRequest.Division&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Division&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.ChangingPlaceRequest.MobileNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.MobileNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.ChangingPlaceRequest.CurrentDepartment&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.CurrentDepartment&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;CBE.NoCategory.ChangingPlaceRequest.NewDepartment&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.NewDepartment&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}},&quot;UI1dd96ac5c22c45dc9cd334b63cbe38cd&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList&quot;:{&quot;FieldMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList.RequestBy&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.RequestBy&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.Title&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Title&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.Department&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Department&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.Division&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Division&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.SeatNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.SeatNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.Location&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Location&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.MobileNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.MobileNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.TelephoneExtension&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.TelephoneExtension&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.ListCreation&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.ListCreation&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null},&quot;CBE.NoCategory.ChangingPlaceRequest&quot;:{&quot;FieldMappings&quot;:{&quot;CBE.NoCategory.ChangingPlaceRequest.Name&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Name&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.Title&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Title&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.Sector&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Sector&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.Division&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Division&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.MobileNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.MobileNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.CurrentDepartment&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.CurrentDepartment&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.NewDepartment&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.NewDepartment&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}},&quot;UI95cd3a31368a442fa8478c124d3c56cb&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList&quot;:{&quot;FieldMappings&quot;:{&quot;CBE.NoCategory.E-mailDistributionList.RequestBy&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.RequestBy&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.Title&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Title&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.Department&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Department&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.Division&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Division&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.SeatNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.SeatNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.Location&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Location&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.MobileNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.MobileNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.TelephoneExtension&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.TelephoneExtension&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.E-mailDistributionList.ListCreation&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.E-mailDistributionList.ListCreation&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null},&quot;CBE.NoCategory.ChangingPlaceRequest&quot;:{&quot;FieldMappings&quot;:{&quot;CBE.NoCategory.ChangingPlaceRequest.Name&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Name&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.Title&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Title&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.Sector&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Sector&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.Division&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Division&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.MobileNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.MobileNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.CurrentDepartment&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.CurrentDepartment&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false},&quot;CBE.NoCategory.ChangingPlaceRequest.NewDepartment&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.NewDepartment&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:false}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI95cd3a31368a442fa8478c124d3c56cb&quot;:&quot;0&quot;,&quot;UI1dd96ac5c22c45dc9cd334b63cbe38cd&quot;:&quot;0&quot;,&quot;UIb6d9c283f1d24ff09bf645ba8ba199b5&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UIb6d9c283f1d24ff09bf645ba8ba199b5&quot;:[],&quot;UI95cd3a31368a442fa8478c124d3c56cb&quot;:[],&quot;UI1dd96ac5c22c45dc9cd334b63cbe38cd&quot;:[]}}">
                                    <p9:DataExtractionScope.ClassificationResult>
                                      <InArgument x:TypeArguments="p3:ClassificationResult">
                                        <CSharpValue x:TypeArguments="p3:ClassificationResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">ClassificationResults[0]</CSharpValue>
                                      </InArgument>
                                    </p9:DataExtractionScope.ClassificationResult>
                                    <p9:DataExtractionScope.DocumentObjectModel>
                                      <InArgument x:TypeArguments="p2:Document">
                                        <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">DOM</CSharpValue>
                                      </InArgument>
                                    </p9:DataExtractionScope.DocumentObjectModel>
                                    <p9:DataExtractionScope.DocumentPath>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">currentDocumentPath</CSharpValue>
                                      </InArgument>
                                    </p9:DataExtractionScope.DocumentPath>
                                    <p9:DataExtractionScope.DocumentText>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">DocumentText</CSharpValue>
                                      </InArgument>
                                    </p9:DataExtractionScope.DocumentText>
                                    <p9:DataExtractionScope.ExtractionResult>
                                      <OutArgument x:TypeArguments="p3:ExtractionResult">
                                        <CSharpReference x:TypeArguments="p3:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">ExtractionResults</CSharpReference>
                                      </OutArgument>
                                    </p9:DataExtractionScope.ExtractionResult>
                                    <p9:DataExtractionScope.Extractors>
                                      <p9:FormExtractor SerializedSignatureFields="{x:Null}" sap2010:Annotation.AnnotationText="using form extractor to extract structured data from :&#xA;- ID Card:&#xA;1. first name&#xA;2. second name&#xA;3. first address&#xA;4. second address.&#xA;" DisplayName="Form Extractor" sap:VirtualizedContainerService.HintSize="233.6,304" sap2010:WorkflowViewState.IdRef="FormExtractor_1" MinOverlapPercentage="65" PersistenceId="UIb6d9c283f1d24ff09bf645ba8ba199b5" SendDocumentsForAlgorithmImprovements="True" SerializedSettings="{}{&quot;DocTypeSettings&quot;:[{&quot;DocumentTypeId&quot;:&quot;CBE.NoCategory.E-mailDistributionList&quot;,&quot;SignatureFields&quot;:[],&quot;HandwritingFields&quot;:[],&quot;BooleanSynonymsForYes&quot;:[&quot;Yes&quot;,&quot;X&quot;,&quot;V&quot;,&quot;✓&quot;,&quot;✔&quot;,&quot;☒&quot;],&quot;BooleanSynonymsForNo&quot;:[&quot;No&quot;,&quot;☐&quot;],&quot;CaseSensitiveSynonyms&quot;:false}]}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalID&quot;,&quot;FormId&quot;:&quot;a7a6fc55&quot;,&quot;FormName&quot;:&quot;EgyID&quot;,&quot;OriginalFileExtension&quot;:&quot;jpg&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,1064.0,660.0],&quot;SkewAngle&quot;:-0.1,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;جمموريةمصالعراية&quot;,&quot;Box&quot;:[44.0,473.0,400.0,71.0]},{&quot;Text&quot;:&quot;بطاقة&quot;,&quot;Box&quot;:[119.0,740.0,67.0,39.0]},{&quot;Text&quot;:&quot;تحقيق&quot;,&quot;Box&quot;:[117.0,666.0,70.0,45.0]},{&quot;Text&quot;:&quot;الشخصية&quot;,&quot;Box&quot;:[119.0,538.0,124.0,38.0]},{&quot;Text&quot;:&quot;KB7985727&quot;,&quot;Box&quot;:[598.0,106.0,237.0,37.0]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalID.FirstName&quot;,&quot;Box&quot;:[196.6788,390.1333,588.4242,46.7515]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalID.SecondName&quot;,&quot;Box&quot;:[248.2667,353.0545,628.7273,58.0364]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalID.IDNumber&quot;,&quot;Box&quot;:[507.8182,409.4788,607.7697,77.3818]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalID.FirstAddress&quot;,&quot;Box&quot;:[327.2606,317.5879,664.1939,54.8121]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalID.SecondAddress&quot;,&quot;Box&quot;:[380.4606,319.2,667.4182,58.0364]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalID.ManufacturerNumber&quot;,&quot;Box&quot;:[591.6485,54.8121,369.1758,62.8727]}],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;RayaHolding.OnboardDocuments.CriminalRecord&quot;,&quot;FormId&quot;:&quot;b2f9c6d4&quot;,&quot;FormName&quot;:&quot;CriminalRecord&quot;,&quot;OriginalFileExtension&quot;:&quot;jpg&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,891.0,1280.0],&quot;SkewAngle&quot;:-0.1,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Ministry&quot;,&quot;Box&quot;:[43.0,47.0,84.0,25.0]},{&quot;Text&quot;:&quot;of&quot;,&quot;Box&quot;:[44.0,135.0,20.0,23.0]},{&quot;Text&quot;:&quot;Interior&quot;,&quot;Box&quot;:[44.0,160.0,77.0,23.0]},{&quot;Text&quot;:&quot;Personai&quot;,&quot;Box&quot;:[375.0,61.0,75.0,20.0]},{&quot;Text&quot;:&quot;Photo&quot;,&quot;Box&quot;:[375.0,139.0,49.0,19.0]},{&quot;Text&quot;:&quot;صحيفة&quot;,&quot;Box&quot;:[220.0,474.0,56.0,21.0]},{&quot;Text&quot;:&quot;الحالة&quot;,&quot;Box&quot;:[220.0,429.0,42.0,21.0]},{&quot;Text&quot;:&quot;الجنائية&quot;,&quot;Box&quot;:[220.0,366.0,60.0,22.0]},{&quot;Text&quot;:&quot;Criminal&quot;,&quot;Box&quot;:[244.0,368.0,87.0,22.0]},{&quot;Text&quot;:&quot;Record&quot;,&quot;Box&quot;:[244.0,458.0,71.0,22.0]},{&quot;Text&quot;:&quot;Presented&quot;,&quot;Box&quot;:[521.0,743.0,54.0,12.0]},{&quot;Text&quot;:&quot;purpose&quot;,&quot;Box&quot;:[520.0,827.0,46.0,13.0]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.CriminalRecord.ResultofInspection&quot;,&quot;Box&quot;:[625.05,222.75,446.85,67.5]}],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalIDBack&quot;,&quot;FormId&quot;:&quot;11ae48b7&quot;,&quot;FormName&quot;:&quot;EgyIDBack&quot;,&quot;OriginalFileExtension&quot;:&quot;jpg&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,2252.0,1368.0],&quot;SkewAngle&quot;:-0.2,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;متزوج&quot;,&quot;Box&quot;:[381.25,792.5,202.5,90.0]},{&quot;Text&quot;:&quot;مسلم&quot;,&quot;Box&quot;:[373.75,1317.5,171.25,100.0]},{&quot;Text&quot;:&quot;ذكر&quot;,&quot;Box&quot;:[378.75,1737.5,106.25,83.75]},{&quot;Text&quot;:&quot;البطاقة&quot;,&quot;Box&quot;:[601.25,1617.5,221.25,107.5]},{&quot;Text&quot;:&quot;سارية&quot;,&quot;Box&quot;:[602.5,1406.25,197.5,106.25]},{&quot;Text&quot;:&quot;حتى&quot;,&quot;Box&quot;:[603.75,1243.75,137.5,105.0]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalIDBack.ExpireDate&quot;,&quot;Box&quot;:[603.9455,740.4303,498.1697,105.7758]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalIDBack.Job&quot;,&quot;Box&quot;:[112.6,576.6485,1279.5455,255.9091]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalIDBack.Religion&quot;,&quot;Box&quot;:[361.6848,1173.7697,399.2182,129.6606]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalIDBack.Social&quot;,&quot;Box&quot;:[348.0364,614.1818,467.4606,143.3091]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.EgyptianNationalIDBack.Gender&quot;,&quot;Box&quot;:[368.5091,1624.1697,238.8485,109.1879]}],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;RayaHolding.OnboardDocuments.WorkStub&quot;,&quot;FormId&quot;:&quot;71a94289&quot;,&quot;FormName&quot;:&quot;workstub&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,595.0,841.0],&quot;SkewAngle&quot;:-0.5,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;شهادة&quot;,&quot;Box&quot;:[32.27,357.95,25.87,11.47]},{&quot;Text&quot;:&quot;القيد&quot;,&quot;Box&quot;:[32.54,338.21,17.6,11.2]},{&quot;Text&quot;:&quot;حملة&quot;,&quot;Box&quot;:[32.81,315.81,19.47,10.94]},{&quot;Text&quot;:&quot;مؤهلات&quot;,&quot;Box&quot;:[32.81,283.8,29.87,10.94]},{&quot;Text&quot;:&quot;المديرية&quot;,&quot;Box&quot;:[53.35,536.39,29.87,11.47]},{&quot;Text&quot;:&quot;المنطقة&quot;,&quot;Box&quot;:[53.35,376.36,32.27,9.87]},{&quot;Text&quot;:&quot;المكتب&quot;,&quot;Box&quot;:[52.28,209.65,27.47,11.47]},{&quot;Text&quot;:&quot;موبايل&quot;,&quot;Box&quot;:[158.7,402.5,17.34,11.47]},{&quot;Text&quot;:&quot;الخبرة&quot;,&quot;Box&quot;:[180.04,401.7,17.87,8.27]},{&quot;Text&quot;:&quot;المستوى&quot;,&quot;Box&quot;:[200.31,540.4,24.54,9.6]},{&quot;Text&quot;:&quot;التعليمي&quot;,&quot;Box&quot;:[200.85,516.12,22.67,9.34]},{&quot;Text&quot;:&quot;التخصص&quot;,&quot;Box&quot;:[198.71,336.35,23.47,12.54]},{&quot;Text&quot;:&quot;المؤهل&quot;,&quot;Box&quot;:[221.12,546.53,18.67,8.54]},{&quot;Text&quot;:&quot;بيانات&quot;,&quot;Box&quot;:[309.67,362.22,20.81,12.27]},{&quot;Text&quot;:&quot;جهة&quot;,&quot;Box&quot;:[309.67,341.15,17.07,12.54]},{&quot;Text&quot;:&quot;العمل&quot;,&quot;Box&quot;:[309.67,319.28,19.74,12.54]},{&quot;Text&quot;:&quot;الرقم&quot;,&quot;Box&quot;:[327.81,534.53,20.54,14.67]},{&quot;Text&quot;:&quot;التأميني&quot;,&quot;Box&quot;:[327.81,503.32,28.54,14.67]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.WorkStub.WorkStubNumber&quot;,&quot;Box&quot;:[28.5424,137.5892,62.9397,16.1009]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.WorkStub.RegistrationDate&quot;,&quot;Box&quot;:[136.8573,326.4084,65.1353,15.369]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.WorkStub.ExpiryDate&quot;,&quot;Box&quot;:[135.3936,187.3555,49.7663,19.0283]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.WorkStub.Phone&quot;,&quot;Box&quot;:[157.3493,323.4809,70.2583,14.6371]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.WorkStub.Job&quot;,&quot;Box&quot;:[177.8413,425.941,118.5609,14.6371]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.WorkStub.AcademicQualification&quot;,&quot;Box&quot;:[218.8253,37.3247,500.5904,13.9053]}],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest&quot;,&quot;FormId&quot;:&quot;e517afdd&quot;,&quot;FormName&quot;:&quot;ApprovalRequest&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,842.0,596.0],&quot;SkewAngle&quot;:-0.2,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Request&quot;,&quot;Box&quot;:[205.9,35.21,30.67,8.8]},{&quot;Text&quot;:&quot;ID&quot;,&quot;Box&quot;:[205.9,67.74,8.0,7.2]},{&quot;Text&quot;:&quot;Name&quot;,&quot;Box&quot;:[228.57,35.47,22.4,7.47]},{&quot;Text&quot;:&quot;Position&quot;,&quot;Box&quot;:[251.24,35.47,30.4,7.2]},{&quot;Text&quot;:&quot;Grade&quot;,&quot;Box&quot;:[273.38,35.21,23.47,7.73]},{&quot;Text&quot;:&quot;Direct&quot;,&quot;Box&quot;:[296.05,35.74,22.94,7.47]},{&quot;Text&quot;:&quot;Department&quot;,&quot;Box&quot;:[318.98,35.74,45.61,8.53]},{&quot;Text&quot;:&quot;Hiring&quot;,&quot;Box&quot;:[340.85,36.01,22.4,9.07]},{&quot;Text&quot;:&quot;Date&quot;,&quot;Box&quot;:[341.12,60.01,17.87,7.47]},{&quot;Text&quot;:&quot;Type&quot;,&quot;Box&quot;:[364.32,35.74,18.4,8.53]},{&quot;Text&quot;:&quot;Salary&quot;,&quot;Box&quot;:[386.73,36.01,23.2,9.07]},{&quot;Text&quot;:&quot;(100%)&quot;,&quot;Box&quot;:[386.46,62.68,26.14,9.07]},{&quot;Text&quot;:&quot;Fixed&quot;,&quot;Box&quot;:[409.4,36.27,20.0,7.47]},{&quot;Text&quot;:&quot;(%)&quot;,&quot;Box&quot;:[409.13,61.88,12.54,9.33]},{&quot;Text&quot;:&quot;Variable&quot;,&quot;Box&quot;:[432.07,35.74,31.74,7.73]},{&quot;Text&quot;:&quot;(%)&quot;,&quot;Box&quot;:[431.8,73.08,12.27,9.33]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.RequestID&quot;,&quot;Box&quot;:[200.4654,88.2936,25.5441,17.2145]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.Name&quot;,&quot;Box&quot;:[221.567,86.0724,71.6344,19.4357]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.Position&quot;,&quot;Box&quot;:[249.3323,89.9595,101.0656,12.772]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.Grade&quot;,&quot;Box&quot;:[271.5445,82.1852,31.0971,14.9933]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.DirectManager&quot;,&quot;Box&quot;:[291.5355,94.402,91.6254,16.1039]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.Department&quot;,&quot;Box&quot;:[315.4137,91.0701,82.7406,14.9933]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.HiringDate&quot;,&quot;Box&quot;:[336.5153,85.5171,55.5306,16.6592]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.Type&quot;,&quot;Box&quot;:[358.7275,82.1852,65.5261,16.6592]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.Salary&quot;,&quot;Box&quot;:[382.6057,91.0701,36.6502,16.1039]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.FixedPercent&quot;,&quot;Box&quot;:[404.2626,83.2959,36.6502,17.7698]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.ApprovalRequest.VariablePercent&quot;,&quot;Box&quot;:[428.1407,88.2936,34.9843,16.6592]}],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;RayaHolding.OnboardDocuments.Contract&quot;,&quot;FormId&quot;:&quot;742214df&quot;,&quot;FormName&quot;:&quot;contract document&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Employment&quot;,&quot;Box&quot;:[140.15,106.85,76.86,12.43]},{&quot;Text&quot;:&quot;Contract&quot;,&quot;Box&quot;:[140.15,187.23,53.55,12.43]},{&quot;Text&quot;:&quot;(For&quot;,&quot;Box&quot;:[167.03,106.13,26.09,12.43]},{&quot;Text&quot;:&quot;a&quot;,&quot;Box&quot;:[167.03,135.89,6.96,12.43]},{&quot;Text&quot;:&quot;Limited&quot;,&quot;Box&quot;:[167.03,146.45,47.29,12.43]},{&quot;Text&quot;:&quot;Term)&quot;,&quot;Box&quot;:[167.03,197.35,38.03,12.43]},{&quot;Text&quot;:&quot;OnSunday&quot;,&quot;Box&quot;:[194.66,44.18,42.46,9.16]},{&quot;Text&quot;:&quot;11/8/2024&quot;,&quot;Box&quot;:[194.66,88.82,40.83,9.16]},{&quot;Text&quot;:&quot;This&quot;,&quot;Box&quot;:[194.66,132.05,18.07,9.16]},{&quot;Text&quot;:&quot;employment&quot;,&quot;Box&quot;:[194.66,152.45,49.82,9.16]},{&quot;Text&quot;:&quot;contract&quot;,&quot;Box&quot;:[194.66,205.03,32.07,9.16]},{&quot;Text&quot;:&quot;has&quot;,&quot;Box&quot;:[194.66,239.34,13.74,9.16]},{&quot;Text&quot;:&quot;been&quot;,&quot;Box&quot;:[194.66,255.39,18.49,9.16]},{&quot;Text&quot;:&quot;concluded&quot;,&quot;Box&quot;:[205.96,44.18,41.04,9.16]},{&quot;Text&quot;:&quot;by&quot;,&quot;Box&quot;:[205.96,87.85,10.08,9.16]},{&quot;Text&quot;:&quot;and&quot;,&quot;Box&quot;:[205.96,100.08,14.86,9.16]},{&quot;Text&quot;:&quot;between:&quot;,&quot;Box&quot;:[205.96,117.32,35.92,9.16]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.Contract.ContractType&quot;,&quot;Box&quot;:[161.3455,88.0909,162.2727,21.3273]},{&quot;Field&quot;:&quot;RayaHolding.OnboardDocuments.Contract.StartDate&quot;,&quot;Box&quot;:[190.0909,87.1636,46.3636,14.8364]}],&quot;Tables&quot;:[]},{&quot;Page&quot;:1,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]},{&quot;Page&quot;:2,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]},{&quot;Page&quot;:3,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]},{&quot;Page&quot;:4,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]},{&quot;Page&quot;:5,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]},{&quot;Page&quot;:6,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]},{&quot;Page&quot;:7,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest&quot;,&quot;FormId&quot;:&quot;ecefaa4d&quot;,&quot;FormName&quot;:&quot;Changing Place Request&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,595.0,842.0],&quot;SkewAngle&quot;:-0.5,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Changing&quot;,&quot;Box&quot;:[108.02,221.1,69.34,17.34]},{&quot;Text&quot;:&quot;Place&quot;,&quot;Box&quot;:[108.55,293.11,38.41,13.6]},{&quot;Text&quot;:&quot;Request&quot;,&quot;Box&quot;:[109.08,334.45,57.61,16.54]},{&quot;Text&quot;:&quot;PC&quot;,&quot;Box&quot;:[138.42,233.64,22.94,13.6]},{&quot;Text&quot;:&quot;-&quot;,&quot;Box&quot;:[140.56,259.77,5.87,12.0]},{&quot;Text&quot;:&quot;Laptop&quot;,&quot;Box&quot;:[138.96,269.11,52.01,15.2]},{&quot;Text&quot;:&quot;-&quot;,&quot;Box&quot;:[141.09,324.05,6.13,12.0]},{&quot;Text&quot;:&quot;Phone&quot;,&quot;Box&quot;:[139.22,333.92,44.54,13.87]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Name&quot;,&quot;Box&quot;:[196.3865,121.9202,185.4356,23.362]},{&quot;Field&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Title&quot;,&quot;Box&quot;:[202.227,355.5399,119.0,19.7117]},{&quot;Field&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Sector&quot;,&quot;Box&quot;:[222.6687,124.8405,128.4908,12.411]},{&quot;Field&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.Division&quot;,&quot;Box&quot;:[224.1288,378.9018,114.6196,13.8712]},{&quot;Field&quot;:&quot;CBE.NoCategory.ChangingPlaceRequest.MobileNumber&quot;,&quot;Box&quot;:[238.0,124.8405,154.773,18.2515]}],&quot;Tables&quot;:[]},{&quot;Page&quot;:1,&quot;Size&quot;:[0.0,0.0,595.0,842.0],&quot;SkewAngle&quot;:-0.1,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]},{&quot;Page&quot;:2,&quot;Size&quot;:[0.0,0.0,595.0,842.0],&quot;SkewAngle&quot;:-0.3,&quot;Evidence&quot;:[],&quot;Fields&quot;:[],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}},{&quot;DocumentTypeId&quot;:&quot;CBE.NoCategory.E-mailDistributionList&quot;,&quot;FormId&quot;:&quot;b231c3c5&quot;,&quot;FormName&quot;:&quot;Email Distribution List&quot;,&quot;OriginalFileExtension&quot;:&quot;pdf&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,612.0,792.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;E-mail&quot;,&quot;Box&quot;:[68.45,223.98,46.31,27.27]},{&quot;Text&quot;:&quot;Distribution&quot;,&quot;Box&quot;:[68.45,274.16,83.5,27.27]},{&quot;Text&quot;:&quot;List&quot;,&quot;Box&quot;:[68.45,361.72,26.66,27.27]},{&quot;Text&quot;:&quot;Creation&quot;,&quot;Box&quot;:[92.48,204.81,60.37,27.27]},{&quot;Text&quot;:&quot;/&quot;,&quot;Box&quot;:[92.48,269.32,4.46,27.27]},{&quot;Text&quot;:&quot;Modification&quot;,&quot;Box&quot;:[92.48,277.67,87.8,27.27]},{&quot;Text&quot;:&quot;Form&quot;,&quot;Box&quot;:[92.48,369.45,38.17,27.27]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.RequestBy&quot;,&quot;Box&quot;:[147.1804,195.2393,116.3926,18.773]},{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Title&quot;,&quot;Box&quot;:[173.4626,108.1325,288.3534,14.2675]},{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Department&quot;,&quot;Box&quot;:[198.9939,138.9202,171.2098,12.7656]},{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Division&quot;,&quot;Box&quot;:[192.2356,411.5043,69.0847,18.773]},{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.SeatNumber&quot;,&quot;Box&quot;:[219.2687,379.9656,99.8724,15.0184]},{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.Location&quot;,&quot;Box&quot;:[221.5215,156.1914,87.8577,14.2675]},{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.MobileNumber&quot;,&quot;Box&quot;:[243.2982,347.6761,183.9755,14.2675]},{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.TelephoneExtension&quot;,&quot;Box&quot;:[244.0491,182.4736,82.6012,12.7656]},{&quot;Field&quot;:&quot;CBE.NoCategory.E-mailDistributionList.ListCreation&quot;,&quot;Box&quot;:[273.335,83.3521,170.4589,26.2822]}],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}}]" Timeout="100000">
                                        <p9:FormExtractor.ApiKey>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">DUApiKey</CSharpValue>
                                          </InArgument>
                                        </p9:FormExtractor.ApiKey>
                                        <p9:FormExtractor.DocumentBounds>
                                          <InArgument x:TypeArguments="p3:ResultsDocumentBounds">
                                            <DelegateArgumentValue x:TypeArguments="p3:ResultsDocumentBounds">
                                              <DelegateInArgument x:TypeArguments="p3:ResultsDocumentBounds" Name="DocumentBounds" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:FormExtractor.DocumentBounds>
                                        <p9:FormExtractor.DocumentObjectModel>
                                          <InArgument x:TypeArguments="p2:Document">
                                            <DelegateArgumentValue x:TypeArguments="p2:Document">
                                              <DelegateInArgument x:TypeArguments="p2:Document" Name="DocumentObjectModel" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:FormExtractor.DocumentObjectModel>
                                        <p9:FormExtractor.DocumentPath>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:FormExtractor.DocumentPath>
                                        <p9:FormExtractor.DocumentText>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:FormExtractor.DocumentText>
                                        <p9:FormExtractor.Endpoint>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">DUFormExtractorEndPoint</CSharpValue>
                                          </InArgument>
                                        </p9:FormExtractor.Endpoint>
                                        <p9:FormExtractor.ExtractorDocumentType>
                                          <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                            <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                              <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:FormExtractor.ExtractorDocumentType>
                                        <p9:FormExtractor.ExtractorResult>
                                          <OutArgument x:TypeArguments="p10:ExtractorResult">
                                            <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                              <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                            </DelegateArgumentReference>
                                          </OutArgument>
                                        </p9:FormExtractor.ExtractorResult>
                                        <p9:FormExtractor.PredictionId>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:FormExtractor.PredictionId>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </p9:FormExtractor>
                                      <p9:RegexBasedExtractor DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="233.6,304" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_1" PersistenceId="UI1dd96ac5c22c45dc9cd334b63cbe38cd" Timeout="2000" UseVisualAlignment="False">
                                        <p9:RegexBasedExtractor.Configuration>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_752">"[{\"DocumentTypeId\":\"CBE.NoCategory.E-mailDistributionList\",\"FieldConfiguration\":[{\"FieldId\":\"CBE.NoCategory.E-mailDistributionList.ListCreation\",\"Expression\":\"E-mail Distribution List Creation\\\\s*([☒☐])\",\"Options\":0,\"Model\":\"{\\\"Parts\\\":[{\\\"Capture\\\":false,\\\"Index\\\":0,\\\"OperationID\\\":\\\"ADV\\\",\\\"OperationName\\\":\\\"Advanced\\\",\\\"OperationValue\\\":\\\"E-mail Distribution List Creation\\\\\\\\s*([☒☐])\\\",\\\"QuantifierFirstValue\\\":\\\"1\\\",\\\"QuantifierID\\\":\\\"EXT\\\",\\\"QuantifierName\\\":\\\"Exactly\\\",\\\"QuantifierSecondValue\\\":null}],\\\"Version\\\":2}\"}]}]"</CSharpValue>
                                          </InArgument>
                                        </p9:RegexBasedExtractor.Configuration>
                                        <p9:RegexBasedExtractor.DocumentBounds>
                                          <InArgument x:TypeArguments="p3:ResultsDocumentBounds">
                                            <DelegateArgumentValue x:TypeArguments="p3:ResultsDocumentBounds">
                                              <DelegateInArgument x:TypeArguments="p3:ResultsDocumentBounds" Name="DocumentBounds" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:RegexBasedExtractor.DocumentBounds>
                                        <p9:RegexBasedExtractor.DocumentObjectModel>
                                          <InArgument x:TypeArguments="p2:Document">
                                            <DelegateArgumentValue x:TypeArguments="p2:Document">
                                              <DelegateInArgument x:TypeArguments="p2:Document" Name="DocumentObjectModel" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:RegexBasedExtractor.DocumentObjectModel>
                                        <p9:RegexBasedExtractor.DocumentPath>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:RegexBasedExtractor.DocumentPath>
                                        <p9:RegexBasedExtractor.DocumentText>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:RegexBasedExtractor.DocumentText>
                                        <p9:RegexBasedExtractor.ExtractorDocumentType>
                                          <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                            <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                              <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:RegexBasedExtractor.ExtractorDocumentType>
                                        <p9:RegexBasedExtractor.ExtractorResult>
                                          <OutArgument x:TypeArguments="p10:ExtractorResult">
                                            <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                              <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                            </DelegateArgumentReference>
                                          </OutArgument>
                                        </p9:RegexBasedExtractor.ExtractorResult>
                                        <p9:RegexBasedExtractor.PredictionId>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p9:RegexBasedExtractor.PredictionId>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </p9:RegexBasedExtractor>
                                      <p7:GenerativeExtractor AvailableAssetPaths="{x:Null}" RuntimeAssetPath="{x:Null}" RuntimeTenantUrl="{x:Null}" DisplayName="Generative Extractor" sap:VirtualizedContainerService.HintSize="233.6,304" sap2010:WorkflowViewState.IdRef="GenerativeExtractor_1" PersistenceId="UI95cd3a31368a442fa8478c124d3c56cb" Prompt="{}{&quot;CBE.NoCategory.E-mailDistributionList.RequestBy&quot;:null,&quot;CBE.NoCategory.E-mailDistributionList.Title&quot;:null,&quot;CBE.NoCategory.E-mailDistributionList.Department&quot;:null,&quot;CBE.NoCategory.E-mailDistributionList.Division&quot;:null,&quot;CBE.NoCategory.E-mailDistributionList.SeatNumber&quot;:null,&quot;CBE.NoCategory.E-mailDistributionList.Location&quot;:null,&quot;CBE.NoCategory.E-mailDistributionList.MobileNumber&quot;:null,&quot;CBE.NoCategory.E-mailDistributionList.TelephoneExtension&quot;:null,&quot;CBE.NoCategory.ChangingPlaceRequest.Name&quot;:null,&quot;CBE.NoCategory.ChangingPlaceRequest.Title&quot;:null,&quot;CBE.NoCategory.ChangingPlaceRequest.Sector&quot;:null,&quot;CBE.NoCategory.ChangingPlaceRequest.Division&quot;:null,&quot;CBE.NoCategory.ChangingPlaceRequest.MobileNumber&quot;:null,&quot;CBE.NoCategory.ChangingPlaceRequest.CurrentDepartment&quot;:null,&quot;CBE.NoCategory.ChangingPlaceRequest.NewDepartment&quot;:null}" RetryOnFailure="True" Timeout="3600000">
                                        <p7:GenerativeExtractor.DocumentBounds>
                                          <InArgument x:TypeArguments="p3:ResultsDocumentBounds">
                                            <DelegateArgumentValue x:TypeArguments="p3:ResultsDocumentBounds">
                                              <DelegateInArgument x:TypeArguments="p3:ResultsDocumentBounds" Name="DocumentBounds" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p7:GenerativeExtractor.DocumentBounds>
                                        <p7:GenerativeExtractor.DocumentObjectModel>
                                          <InArgument x:TypeArguments="p2:Document">
                                            <DelegateArgumentValue x:TypeArguments="p2:Document">
                                              <DelegateInArgument x:TypeArguments="p2:Document" Name="DocumentObjectModel" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p7:GenerativeExtractor.DocumentObjectModel>
                                        <p7:GenerativeExtractor.DocumentPath>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p7:GenerativeExtractor.DocumentPath>
                                        <p7:GenerativeExtractor.DocumentText>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p7:GenerativeExtractor.DocumentText>
                                        <p7:GenerativeExtractor.ExtractorDocumentType>
                                          <InArgument x:TypeArguments="p10:ExtractorDocumentType">
                                            <DelegateArgumentValue x:TypeArguments="p10:ExtractorDocumentType">
                                              <DelegateInArgument x:TypeArguments="p10:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p7:GenerativeExtractor.ExtractorDocumentType>
                                        <p7:GenerativeExtractor.ExtractorResult>
                                          <OutArgument x:TypeArguments="p10:ExtractorResult">
                                            <DelegateArgumentReference x:TypeArguments="p10:ExtractorResult">
                                              <DelegateOutArgument x:TypeArguments="p10:ExtractorResult" Name="ExtractorResult" />
                                            </DelegateArgumentReference>
                                          </OutArgument>
                                        </p7:GenerativeExtractor.ExtractorResult>
                                        <p7:GenerativeExtractor.PredictionId>
                                          <InArgument x:TypeArguments="x:String">
                                            <DelegateArgumentValue x:TypeArguments="x:String">
                                              <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                            </DelegateArgumentValue>
                                          </InArgument>
                                        </p7:GenerativeExtractor.PredictionId>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </p7:GenerativeExtractor>
                                    </p9:DataExtractionScope.Extractors>
                                    <p9:DataExtractionScope.Taxonomy>
                                      <InArgument x:TypeArguments="p1:DocumentTaxonomy">
                                        <CSharpValue x:TypeArguments="p1:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">Taxonomy</CSharpValue>
                                      </InArgument>
                                    </p9:DataExtractionScope.Taxonomy>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </p9:DataExtractionScope>
                                  <If sap2010:Annotation.AnnotationText="If extraction confidance for any field(s) is less than threshold then present " DisplayName="If - Extraction Confidance" sap:VirtualizedContainerService.HintSize="433.6,112.8" sap2010:WorkflowViewState.IdRef="If_15">
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_727" xml:space="preserve">ExtractionResults.IsAnyFieldOrTableCellMissing() || 
ExtractionResults.ResultsDocument.Fields
.Any
(
	field=&gt;field.Values.Any(x=&gt;x.Confidence &lt; DUExtractionConfidance)
)
&amp;&amp;
!ClassificationResults[0].DocumentTypeId.Equals("RayaHolding.OnboardDocuments.Contract")</CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap2010:Annotation.AnnotationText="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="p:DocumentValidationActionData" Name="ActionObject" />
                                          <Variable x:TypeArguments="p3:ExtractionResult" Name="AutomaticExtractionResults" />
                                          <Variable x:TypeArguments="p:DocumentValidationActionData" Name="ActionObjectOutput" />
                                          <Variable x:TypeArguments="x:String" Name="HTML" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="&quot;Some of fields related to document [&quot;+ClassificationResults[0].DocumentId+&quot;] , is/are failed to be extracted with minimum confidance of [&quot;+DUExtractionConfidance+&quot;], fields are: &quot;+ Environment.NewLine+" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Warn">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207" xml:space="preserve">"Some of fields related to document ["+ClassificationResults[0].DocumentId+"] , is/are failed to be extracted with minimum confidance of ["+DUExtractionConfidance+"], fields are: "+ Environment.NewLine+
string.Join(" | ",ExtractionResults.ResultsDocument.Fields.Where(x=&gt;x.Values.Where(y=&gt;y.Confidence &lt; DUExtractionConfidance).Count() &gt; 0).Select(x=&gt;x.FieldName))</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                        <ui:LogMessage DisplayName="&quot;Present document on action center and wait . . .&quot;" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">"Present document ["+currentDocumentFileName+"] on action center and wait . . ."</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                        <p:PresentValidationStation FieldsValidationConfidence="{x:Null}" DisplayName="Present Validation Station" sap:VirtualizedContainerService.HintSize="333.6,372" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" ShowOnlyRelevantPageRange="False">
                                          <p:PresentValidationStation.AutomaticExtractionResults>
                                            <InArgument x:TypeArguments="p3:ExtractionResult">
                                              <CSharpValue x:TypeArguments="p3:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_733">ExtractionResults</CSharpValue>
                                            </InArgument>
                                          </p:PresentValidationStation.AutomaticExtractionResults>
                                          <p:PresentValidationStation.DocumentObjectModel>
                                            <InArgument x:TypeArguments="p2:Document">
                                              <CSharpValue x:TypeArguments="p2:Document" sap2010:WorkflowViewState.IdRef="CSharpValue`1_734">DOM</CSharpValue>
                                            </InArgument>
                                          </p:PresentValidationStation.DocumentObjectModel>
                                          <p:PresentValidationStation.DocumentPath>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_736">currentDocumentPath</CSharpValue>
                                            </InArgument>
                                          </p:PresentValidationStation.DocumentPath>
                                          <p:PresentValidationStation.DocumentText>
                                            <InArgument x:TypeArguments="x:String">
                                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_735">DocumentText</CSharpValue>
                                            </InArgument>
                                          </p:PresentValidationStation.DocumentText>
                                          <p:PresentValidationStation.Taxonomy>
                                            <InArgument x:TypeArguments="p1:DocumentTaxonomy">
                                              <CSharpValue x:TypeArguments="p1:DocumentTaxonomy" sap2010:WorkflowViewState.IdRef="CSharpValue`1_737">Taxonomy</CSharpValue>
                                            </InArgument>
                                          </p:PresentValidationStation.Taxonomy>
                                          <p:PresentValidationStation.ValidatedExtractionResults>
                                            <OutArgument x:TypeArguments="p3:ExtractionResult">
                                              <CSharpReference x:TypeArguments="p3:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpReference`1_278">ValidatedExtractionResults</CSharpReference>
                                            </OutArgument>
                                          </p:PresentValidationStation.ValidatedExtractionResults>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </p:PresentValidationStation>
                                        <ui:LogMessage DisplayName="&quot;Data fields for doucment [&quot;+ClassificationResults[0].DocumentTypeId+&quot;] is validated successfuly by the human&quot;" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_23">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">"Data fields for doucment ["+ClassificationResults[0].DocumentTypeId+"] is validated successfuly by the human"</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="LogMessage_24">
                                          <ui:LogMessage.Message>
                                            <InArgument x:TypeArguments="x:Object">
                                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97">"All fields related to the current document are extracted successfully, with confidance"</CSharpValue>
                                            </InArgument>
                                          </ui:LogMessage.Message>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <Assign DisplayName="Assign - Extraction Results" sap:VirtualizedContainerService.HintSize="433.6,83.2" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="p3:ExtractionResult">
                                        <CSharpReference x:TypeArguments="p3:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">ExtractionResults</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="p3:ExtractionResult">
                                        <CSharpValue x:TypeArguments="p3:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_98" xml:space="preserve">ValidatedExtractionResults == null  ?
	ExtractionResults : ValidatedExtractionResults</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </Sequence>
                                <Sequence sap2010:Annotation.AnnotationText="Export document extracted data" DisplayName="Export" sap:VirtualizedContainerService.HintSize="496,114.4" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="sd:DataSet" Name="DataSet" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="&quot;Export dataset from the current document&quot;" sap:VirtualizedContainerService.HintSize="536,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info">
                                    <ui:LogMessage.Message>
                                      <InArgument x:TypeArguments="x:Object">
                                        <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">"Export dataset from the current document ["+ClassificationResults[0].DocumentTypeId+"]"</CSharpValue>
                                      </InArgument>
                                    </ui:LogMessage.Message>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <p9:ExportExtractionResults sap2010:Annotation.AnnotationText="Export dataset from the current document" DisplayName="Export Extraction Results" sap:VirtualizedContainerService.HintSize="536,208" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False">
                                    <p9:ExportExtractionResults.DataSet>
                                      <OutArgument x:TypeArguments="sd:DataSet">
                                        <CSharpReference x:TypeArguments="sd:DataSet" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">DataSet</CSharpReference>
                                      </OutArgument>
                                    </p9:ExportExtractionResults.DataSet>
                                    <p9:ExportExtractionResults.ExtractionResult>
                                      <InArgument x:TypeArguments="p3:ExtractionResult">
                                        <CSharpValue x:TypeArguments="p3:ExtractionResult" sap2010:WorkflowViewState.IdRef="CSharpValue`1_100">ExtractionResults</CSharpValue>
                                      </InArgument>
                                    </p9:ExportExtractionResults.ExtractionResult>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </p9:ExportExtractionResults>
                                  <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Hint: DicOfDUStatus Should be Filled in case of success" DisplayName="Switch - Document Type ID" sap:VirtualizedContainerService.HintSize="536,436" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                                    <Switch.Default>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_38">
                                        <ui:LogMessage.Message>
                                          <InArgument x:TypeArguments="x:Object">
                                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">ClassificationResults[0].DocumentTypeId</CSharpValue>
                                          </InArgument>
                                        </ui:LogMessage.Message>
                                      </ui:LogMessage>
                                    </Switch.Default>
                                    <Switch.Expression>
                                      <InArgument x:TypeArguments="x:String">
                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">ClassificationResults[0].DocumentTypeId</CSharpValue>
                                      </InArgument>
                                    </Switch.Expression>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence x:Key="CBE.NoCategory.E-mailDistributionList" DisplayName="Email distribution list" sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_98">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign - Doc Of DU Status" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)">
                                            <CSharpReference x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_282">DicOfDUStatus[ClassificationResults[0].DocumentTypeId.Split('.', StringSplitOptions.RemoveEmptyEntries).Last()]</CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)">
                                            <CSharpValue x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_742">new Tuple&lt;bool,string,DataTable&gt;(true,"Success data extraction",DataSet.Tables[0])</CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                    </Sequence>
                                    <Sequence x:Key="CBE.NoCategory.ChangingPlaceRequest" DisplayName="Change place reqeust" sap:VirtualizedContainerService.HintSize="496,191.2" sap2010:WorkflowViewState.IdRef="Sequence_99">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign - Doc Of DU Status" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_26">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)">
                                            <CSharpReference x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_283">DicOfDUStatus[ClassificationResults[0].DocumentTypeId.Split('.', StringSplitOptions.RemoveEmptyEntries).Last()]</CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)">
                                            <CSharpValue x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_743">new Tuple&lt;bool,string,DataTable&gt;(true,"Success data extraction",DataSet.Tables[0])</CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                    </Sequence>
                                  </Switch>
                                </Sequence>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="561.6,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="SE Handling per document" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message - SE" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Error">
                                      <ui:LogMessage.Message>
                                        <InArgument x:TypeArguments="x:Object">
                                          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105">exception.Message</CSharpValue>
                                        </InArgument>
                                      </ui:LogMessage.Message>
                                    </ui:LogMessage>
                                    <Assign DisplayName="Assign - Doc Of DU Status" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_8">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)">
                                          <CSharpReference x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_188">DicOfDUStatus[ClassificationResults[0].DocumentId]</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)">
                                          <CSharpValue x:TypeArguments="s:Tuple(x:Boolean, x:String, sd:DataTable)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_545">new Tuple&lt;bool,string,DataTable&gt;(false,"System Exception: " + Config["MessageTemplateSystemException"].ToString().Replace("TOKEN1","perform document processing") +", details: " + exception.Message,null)</CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </ActivityAction>
                      </ParallelForEach>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">70,433.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,175.2</av:Size>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence sap2010:Annotation.AnnotationText="all DicOfDUStatus should be success to send confirmation mail with success dt else throw SE including all details without dt for success one`s" DisplayName="Check Success" sap:VirtualizedContainerService.HintSize="200,175.2" sap2010:WorkflowViewState.IdRef="Sequence_63">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If sap2010:Annotation.AnnotationText="if any status is failed then throw SE with details for each failure" DisplayName="If - Any Status is Failed" sap:VirtualizedContainerService.HintSize="512,112.8" sap2010:WorkflowViewState.IdRef="If_19">
                            <If.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_522">DicOfDUStatus.Values.Any(x=&gt;x.Item1 == false)</CSharpValue>
                              </InArgument>
                            </If.Condition>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="476,392" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="failedDetails" />
                                  <Variable x:TypeArguments="x:Int32" Name="i" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign- failedDetails" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_10">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_191">failedDetails</CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_525">string.Empty</CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ForEach x:TypeArguments="x:String" DisplayName="For Each currentText" sap:VirtualizedContainerService.HintSize="434,52" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,441" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If DisplayName="If - status false" sap:VirtualizedContainerService.HintSize="510,353" sap2010:WorkflowViewState.IdRef="If_20">
                                          <If.Condition>
                                            <InArgument x:TypeArguments="x:Boolean">
                                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_529">!DicOfDUStatus[currentText].Item1</CSharpValue>
                                            </InArgument>
                                          </If.Condition>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="476,171" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign - failedDetails" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">
                                                    <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_194">failedDetails</CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_556" xml:space="preserve">failedDetails+Environment.NewLine+
(i+1).ToString() + "." + currentText+": "+ DicOfDUStatus[currentText].Item2</CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_68" />
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                  <ui:ForEach.CurrentIndex>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_193">i</CSharpReference>
                                    </OutArgument>
                                  </ui:ForEach.CurrentIndex>
                                  <ui:ForEach.Values>
                                    <InArgument x:TypeArguments="sc:IEnumerable">
                                      <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_524">DicOfDUStatus.Keys</CSharpValue>
                                    </InArgument>
                                  </ui:ForEach.Values>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:ForEach>
                                <Throw DisplayName="Throw - SE" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="Throw_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <InArgument x:TypeArguments="s:Exception">
                                    <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_531">new Exception(failedDetails)</CSharpValue>
                                  </InArgument>
                                </Throw>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                          <Sequence DisplayName="Add excel to folder" sap:VirtualizedContainerService.HintSize="512,1460.8" sap2010:WorkflowViewState.IdRef="Sequence_69">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:Exception" Name="SE" />
                              <Variable x:TypeArguments="x:String" Name="HTML" />
                              <Variable x:TypeArguments="upr:ILocalResource" Name="AttachmentPath" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Prepare excel " sap:VirtualizedContainerService.HintSize="449.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_44">
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_744">"Preparing excel to be added to the folder"</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <ui:CopyFile ContinueOnError="{x:Null}" DisplayName="Copy File attachment" sap:VirtualizedContainerService.HintSize="449.6,155.2" sap2010:WorkflowViewState.IdRef="CopyFile_1">
                              <ui:CopyFile.Destination>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_706">DicOfRequestInfo["FolderOfAttachments"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:CopyFile.Destination>
                              <ui:CopyFile.Path>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_705">Config["AttachmentPath"].ToString()</CSharpValue>
                                </InArgument>
                              </ui:CopyFile.Path>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CopyFile>
                            <Sequence DisplayName="Sequence Prepare attachment" sap:VirtualizedContainerService.HintSize="449.6,360" sap2010:WorkflowViewState.IdRef="Sequence_87">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Append Data tables info" DisplayName="For Each currentDocumentName" sap:VirtualizedContainerService.HintSize="387.2,248" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="currentDocumentName" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_88">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DisplayName="Write Range Workbook to excel" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteRange_2">
                                        <ui:WriteRange.DataTable>
                                          <InArgument x:TypeArguments="sd:DataTable">
                                            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_715">DicOfDUStatus[currentDocumentName].Item3</CSharpValue>
                                          </InArgument>
                                        </ui:WriteRange.DataTable>
                                        <ui:WriteRange.SheetName>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_716">currentDocumentName</CSharpValue>
                                          </InArgument>
                                        </ui:WriteRange.SheetName>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:WriteRange.WorkbookPath>
                                          <InArgument x:TypeArguments="x:String">
                                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_717">DicOfRequestInfo["FolderOfAttachments"].ToString() + @"\"+ "ExtractedData.xlsx"</CSharpValue>
                                          </InArgument>
                                        </ui:WriteRange.WorkbookPath>
                                      </ui:WriteRange>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="333.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_97">
                                            <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" sap2010:Annotation.AnnotationText="Write extrected data" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="616,1003" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
                                              <ueab:ExcelProcessScopeX.Body>
                                                <ActivityAction x:TypeArguments="ui:IExcelProcess">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                                                  </ActivityAction.Argument>
                                                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="582,885" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" SensitivityOperation="None">
                                                    <ueab:ExcelApplicationCard.Body>
                                                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Do write datatable" sap:VirtualizedContainerService.HintSize="548,616" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,306" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                                            <ui:CommentOut.Body>
                                                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,227" sap2010:WorkflowViewState.IdRef="Sequence_96">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:WriteRange StartingCell="{x:Null}" AddHeaders="False" DisplayName="Write Range Workbook to excel" sap:VirtualizedContainerService.HintSize="388,116" sap2010:WorkflowViewState.IdRef="WriteRange_1">
                                                                  <ui:WriteRange.DataTable>
                                                                    <InArgument x:TypeArguments="sd:DataTable">
                                                                      <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_712">DicOfDUStatus[currentDocumentName].Item3</CSharpValue>
                                                                    </InArgument>
                                                                  </ui:WriteRange.DataTable>
                                                                  <ui:WriteRange.SheetName>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_713">currentDocumentName</CSharpValue>
                                                                    </InArgument>
                                                                  </ui:WriteRange.SheetName>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:WriteRange.WorkbookPath>
                                                                    <InArgument x:TypeArguments="x:String">
                                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_714">DicOfRequestInfo["FolderOfAttachments"].ToString() + @"\"+ "ExtractedData.xlsx"</CSharpValue>
                                                                    </InArgument>
                                                                  </ui:WriteRange.WorkbookPath>
                                                                </ui:WriteRange>
                                                              </Sequence>
                                                            </ui:CommentOut.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:CommentOut>
                                                          <ueab:WriteRangeX DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="486,159" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False">
                                                            <ueab:WriteRangeX.Destination>
                                                              <InArgument x:TypeArguments="ue:IReadWriteRangeRef">
                                                                <CSharpValue x:TypeArguments="ue:IReadWriteRangeRef" sap2010:WorkflowViewState.IdRef="CSharpValue`1_710">Excel.Sheet[currentDocumentName]</CSharpValue>
                                                              </InArgument>
                                                            </ueab:WriteRangeX.Destination>
                                                            <ueab:WriteRangeX.Source>
                                                              <InArgument x:TypeArguments="sd:DataTable">
                                                                <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_709">DicOfDUStatus[currentDocumentName].Item3</CSharpValue>
                                                              </InArgument>
                                                            </ueab:WriteRangeX.Source>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ueab:WriteRangeX>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ueab:ExcelApplicationCard.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ueab:ExcelApplicationCard.WorkbookPath>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_711">DicOfRequestInfo["FolderOfAttachments"].ToString() + @"\"+ "ExtractedData.xlsx"</CSharpValue>
                                                      </InArgument>
                                                    </ueab:ExcelApplicationCard.WorkbookPath>
                                                  </ueab:ExcelApplicationCard>
                                                </ActivityAction>
                                              </ueab:ExcelProcessScopeX.Body>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ExcelProcessScopeX>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                      </ui:CommentOut>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <ui:ForEach.Values>
                                  <InArgument x:TypeArguments="sc:IEnumerable">
                                    <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_677">DicOfDUStatus.Keys</CSharpValue>
                                  </InArgument>
                                </ui:ForEach.Values>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                            </Sequence>
                            <If DisplayName="If- SE" sap:VirtualizedContainerService.HintSize="449.6,263.2" sap2010:WorkflowViewState.IdRef="If_21">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_541">SE!=null</CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Throw DisplayName="Throw - SE" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_7">
                                    <InArgument x:TypeArguments="s:Exception">
                                      <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_542">SE</CSharpValue>
                                    </InArgument>
                                  </Throw>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_71" />
                              </If.Else>
                            </If>
                            <ui:LogMessage DisplayName="&quot;Excel file prepared successfully&quot;" sap:VirtualizedContainerService.HintSize="449.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_45">
                              <ui:LogMessage.Message>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_745">"Excel file added successfully"</CSharpValue>
                                </InArgument>
                              </ui:LogMessage.Message>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="449.6,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_1">
                              <ui:MessageBox.Text>
                                <InArgument x:TypeArguments="x:Object">
                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_746">"Excel file with extracted data is added to the specified folder"</CSharpValue>
                                </InArgument>
                              </ui:MessageBox.Text>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:MessageBox>
                          </Sequence>
                        </Sequence>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="636.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="BE Handler" sap:VirtualizedContainerService.HintSize="512,406.4" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="HTML" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - BE" sap:VirtualizedContainerService.HintSize="449.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Warn">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">exception.Message</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <Sequence DisplayName="PerMailErrorNotification" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_30">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:Exception" Name="SE" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="&quot;Invoke PerMailErrorNotification WF, started&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="LogMessage_29">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">"Invoke PerMailErrorNotification WF, started"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PerMailErrorNotification - Invoke Workflow File (Processes\\Mail\\BodyPreparation\\PerMailErrorNotification.xaml)" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Processes\\Mail\\BodyPreparation\\PerMailErrorNotification.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">Config</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">
                      <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">null</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">
                      <CSharpValue x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">exception</CSharpValue>
                    </InArgument>
                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                      <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">SE</CSharpReference>
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_HTML">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">HTML</CSharpReference>
                    </OutArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_DicOfRequestInfo">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_392">DicOfRequestInfo</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_MailMessage">
                      <CSharpValue x:TypeArguments="snm:MailMessage" sap2010:WorkflowViewState.IdRef="CSharpValue`1_718">MailMessage</CSharpValue>
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <If sap2010:Annotation.AnnotationText="If SE Occured then terminate" DisplayName="If - SE" sap:VirtualizedContainerService.HintSize="388,83" sap2010:WorkflowViewState.IdRef="If_8">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">SE!=null</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_35">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TerminateWorkflow DisplayName="Terminate Workflow - SE" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4">
                        <TerminateWorkflow.Exception>
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">SE</CSharpValue>
                          </InArgument>
                        </TerminateWorkflow.Exception>
                        <TerminateWorkflow.Reason>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">SE.Message</CSharpValue>
                          </InArgument>
                        </TerminateWorkflow.Reason>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </TerminateWorkflow>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_36" />
                  </If.Else>
                </If>
                <ui:LogMessage DisplayName="&quot;Invoke PerMailErrorNotification WF, terminated successfully&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="LogMessage_30">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">"Invoke PerMailErrorNotification WF, terminated successfully"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
              <Sequence DisplayName="Send" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:Exception" Name="SE" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="&quot;Invoke send mail, started&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="LogMessage_31">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">"Invoke send mail, started"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                </ui:LogMessage>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="DicOfInfo:&#xA;To&#xA;Cc&#xA;Bcc&#xA;Subject&#xA;Body" DisplayName="Send - Invoke Workflow File (Processes\\Mail\\Outlook\\Send.xaml)" sap:VirtualizedContainerService.HintSize="388,154" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Processes\\Mail\\Outlook\\Send.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">Config</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_DicOfInfo">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_719" xml:space="preserve">new Dictionary&lt;string,string&gt;()
{
	{"To",MailMessage.Sender.Address},
	{"Cc",string.Join(";",MailMessage.CC.Select(x=&gt;x.Address))},
	{"Bcc",string.Join(";",MailMessage.Bcc.Select(x=&gt;x.Address))},
	{"Subject",Config["PerMailBESubject"].ToString()},
	{"Body",HTML}
}</CSharpValue>
                    </InArgument>
                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                      <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">SE</CSharpReference>
                    </OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <If sap2010:Annotation.AnnotationText="If SE Occured then terminate" DisplayName="If - SE" sap:VirtualizedContainerService.HintSize="388,83" sap2010:WorkflowViewState.IdRef="If_9">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">SE!=null</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_37">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TerminateWorkflow DisplayName="Terminate Workflow - SE" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_5">
                        <TerminateWorkflow.Exception>
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">SE</CSharpValue>
                          </InArgument>
                        </TerminateWorkflow.Exception>
                        <TerminateWorkflow.Reason>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">SE.Message</CSharpValue>
                          </InArgument>
                        </TerminateWorkflow.Reason>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </TerminateWorkflow>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38" />
                  </If.Else>
                </If>
                <ui:LogMessage DisplayName="&quot;Invoke send mail, terminated successfully&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">"Invoke send mail, terminated successfully"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="636.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="SE Handler" sap:VirtualizedContainerService.HintSize="512,1527.2" sap2010:WorkflowViewState.IdRef="Sequence_32">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="HTML" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - SE" sap:VirtualizedContainerService.HintSize="449.6,52.8" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Error">
                <ui:LogMessage.Message>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">exception.Message</CSharpValue>
                  </InArgument>
                </ui:LogMessage.Message>
              </ui:LogMessage>
              <Sequence DisplayName="PerMailErrorNotification" sap:VirtualizedContainerService.HintSize="450,590" sap2010:WorkflowViewState.IdRef="Sequence_33">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:Exception" Name="SE" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="&quot;Invoke PerMailErrorNotification WF, started&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="LogMessage_34">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">"Invoke PerMailErrorNotification WF, started"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="PerMailErrorNotification - Invoke Workflow File (Processes\\Mail\\BodyPreparation\\PerMailErrorNotification.xaml)" sap:VirtualizedContainerService.HintSize="388,172" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Processes\\Mail\\BodyPreparation\\PerMailErrorNotification.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">Config</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">
                      <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">exception</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">
                      <CSharpValue x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">null</CSharpValue>
                    </InArgument>
                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                      <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_51">SE</CSharpReference>
                    </OutArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_HTML">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_52">HTML</CSharpReference>
                    </OutArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_DicOfRequestInfo">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_394">DicOfRequestInfo</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_MailMessage">
                      <CSharpValue x:TypeArguments="snm:MailMessage" sap2010:WorkflowViewState.IdRef="CSharpValue`1_720">MailMessage</CSharpValue>
                    </InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <If sap2010:Annotation.AnnotationText="If SE Occured then terminate" DisplayName="If - SE" sap:VirtualizedContainerService.HintSize="388,83" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">SE!=null</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_41">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TerminateWorkflow DisplayName="Terminate Workflow - SE" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_6">
                        <TerminateWorkflow.Exception>
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">SE</CSharpValue>
                          </InArgument>
                        </TerminateWorkflow.Exception>
                        <TerminateWorkflow.Reason>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">SE.Message</CSharpValue>
                          </InArgument>
                        </TerminateWorkflow.Reason>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </TerminateWorkflow>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_42" />
                  </If.Else>
                </If>
                <ui:LogMessage DisplayName="&quot;Invoke PerMailErrorNotification WF, terminated successfully&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="LogMessage_35">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">"Invoke PerMailErrorNotification WF, terminated successfully"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
              <Sequence DisplayName="Send" sap:VirtualizedContainerService.HintSize="450,692" sap2010:WorkflowViewState.IdRef="Sequence_34">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:Exception" Name="SE" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="&quot;Invoke send mail, started&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="LogMessage_36">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">"Invoke send mail, started"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                </ui:LogMessage>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="DicOfInfo:&#xA;To&#xA;Cc&#xA;Bcc&#xA;Subject&#xA;Body" DisplayName="Send - Invoke Workflow File (Processes\\Mail\\Outlook\\Send.xaml)" sap:VirtualizedContainerService.HintSize="388,274" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Processes\\Mail\\Outlook\\Send.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">Config</CSharpValue>
                    </InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_DicOfInfo">
                      <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_721" xml:space="preserve">new Dictionary&lt;string,string&gt;()
{
	{"To",MailMessage.Sender.Address},
	{"Cc",string.Join(";",MailMessage.CC.Select(x=&gt;x.Address))},
	{"Bcc",string.Join(";",MailMessage.Bcc.Select(x=&gt;x.Address))},
	{"Subject",Config["PerMailBESubject"].ToString()},
	{"Body",HTML}
}</CSharpValue>
                    </InArgument>
                    <OutArgument x:TypeArguments="s:Exception" x:Key="out_SE">
                      <CSharpReference x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">SE</CSharpReference>
                    </OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <If sap2010:Annotation.AnnotationText="If SE Occured then terminate" DisplayName="If - SE" sap:VirtualizedContainerService.HintSize="388,83" sap2010:WorkflowViewState.IdRef="If_12">
                  <If.Condition>
                    <InArgument x:TypeArguments="x:Boolean">
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">SE!=null</CSharpValue>
                    </InArgument>
                  </If.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_43">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TerminateWorkflow DisplayName="Terminate Workflow - SE" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_7">
                        <TerminateWorkflow.Exception>
                          <InArgument x:TypeArguments="s:Exception">
                            <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">SE</CSharpValue>
                          </InArgument>
                        </TerminateWorkflow.Exception>
                        <TerminateWorkflow.Reason>
                          <InArgument x:TypeArguments="x:String">
                            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">SE.Message</CSharpValue>
                          </InArgument>
                        </TerminateWorkflow.Reason>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </TerminateWorkflow>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_44">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:LogMessage DisplayName="&quot;Invoke send mail, terminated successfully&quot;" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info">
                  <ui:LogMessage.Message>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">"Invoke send mail, terminated successfully"</CSharpValue>
                    </InArgument>
                  </ui:LogMessage.Message>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>